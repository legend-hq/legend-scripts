name: test

on:
  workflow_dispatch:
  pull_request:

env:
  FOUNDRY_PROFILE: ir

jobs:
  check:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: lib
          key: ${{ runner.os }}-foundry-lib-${{ hashFiles('foundry.toml') }}
          restore-keys: |
            ${{ runner.os }}-foundry-lib-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: forge install
        env:
          FOUNDRY_PROFILE: ir

      - name: Restore Forge Build Cache
        id: cache-forge-build
        uses: actions/cache@v3
        with:
          path: cache
          key: ${{ runner.os }}-foundry-cache-${{ hashFiles('foundry.toml', 'src/**/*.sol') }}
          restore-keys: |
            ${{ runner.os }}-foundry-cache-

      - name: Cache Build Artifacts
        id: cache-build
        uses: actions/cache@v3
        with:
          path: out
          key: ${{ runner.os }}-foundry-out-${{ hashFiles('foundry.toml', 'src/**/*.sol') }}
          restore-keys: |
            ${{ runner.os }}-foundry-out-

      - name: Run Forge build
        run: |
          forge --version
        id: build
        env:
          FOUNDRY_PROFILE: ir

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test
        env:
          FOUNDRY_PROFILE: ir
          MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}
          BASE_MAINNET_RPC_URL: ${{ secrets.BASE_MAINNET_RPC_URL }}
          SEPOLIA_RPC_URL: ${{ secrets.SEPOLIA_RPC_URL }}
          BASE_SEPOLIA_RPC_URL: ${{ secrets.BASE_SEPOLIA_RPC_URL }}
