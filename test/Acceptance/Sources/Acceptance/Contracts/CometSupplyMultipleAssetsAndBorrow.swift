@preconcurrency import BigInt
@preconcurrency import Eth
import Foundation

public enum CometSupplyMultipleAssetsAndBorrow {
    public static let creationCode: Hex = "0x608060405234601c57600e6020565b610f1e61002b8239610f1e90f35b6026565b60405190565b5f80fdfe60806040526004361015610013575b610206565b61001d5f3561002c565b63ff2038850361000e576101cc565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b73ffffffffffffffffffffffffffffffffffffffff1690565b61006690610044565b90565b6100728161005d565b0361007957565b5f80fd5b9050359061008a82610069565b565b5f80fd5b5f80fd5b5f80fd5b909182601f830112156100d25781359167ffffffffffffffff83116100cd5760200192602083028401116100c857565b610094565b610090565b61008c565b909182601f830112156101115781359167ffffffffffffffff831161010c57602001926020830284011161010757565b610094565b610090565b61008c565b90565b61012281610116565b0361012957565b5f80fd5b9050359061013a82610119565b565b909160a0828403126101c257610154835f840161007d565b92602083013567ffffffffffffffff81116101bd5781610175918501610098565b92909360408101359167ffffffffffffffff83116101b85761019c846101b59484016100d7565b9390946101ac816060860161007d565b9360800161012d565b90565b610040565b610040565b61003c565b5f0190565b34610201576101eb6101df36600461013c565b95949094939193610438565b6101f3610032565b806101fd816101c7565b0390f35b610038565b5f80fd5b5090565b5090565b90565b90565b61022c61022761023192610212565b610215565b610116565b90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9190811015610271576020020190565b610234565b3561028081610119565b90565b9190811015610293576020020190565b610234565b356102a281610069565b90565b6102b96102b46102be92610044565b610215565b610044565b90565b6102ca906102a5565b90565b6102d6906102c1565b90565b6102e2906102a5565b90565b6102ee906102d9565b90565b6102fa906102d9565b90565b5f80fd5b601f801991011690565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b9061034290610301565b810190811067ffffffffffffffff82111761035c57604052565b61030b565b60e01b90565b9050519061037482610119565b565b9060208282031261038f5761038c915f01610367565b90565b61003c565b61039d9061005d565b9052565b91906103b4905f60208501940190610394565b565b6103be610032565b3d5f823e3d90fd5b6103cf906102a5565b90565b6103db906103c6565b90565b6103e7906102d9565b90565b5f9103126103f457565b61003c565b61040290610116565b9052565b91602061042792949361042060408201965f830190610394565b01906103f9565b565b60016104359101610116565b90565b9392919690949561044a86899061020a565b61046661046061045b86889061020e565b610116565b91610116565b0361074d576104745f610218565b5b8061049261048c6104878a8d9061020a565b610116565b91610116565b1015610692576104ac6104a785878491610261565b610276565b9089826104e16104db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610116565b91610116565b146105e6575b50816104fb6104f55f610218565b91610116565b11610510575b61050b9150610429565b610475565b61053861053061052b6105268d8c908691610283565b610298565b6102cd565b888491610823565b610549610544886103d2565b6103de565b9163f2b9fdb8906105656105608d8c908691610283565b610298565b9093803b156105e15761058b5f809461059661057f610032565b98899687958694610361565b845260048401610406565b03925af19182156105dc5761050b926105b0575b50610501565b6105cf905f3d81116105d5575b6105c78183610338565b8101906103ea565b5f6105aa565b503d6105bd565b6103b6565b6102fd565b61064591925061061361060e6106096106046020948d908891610283565b610298565b6102cd565b6102e5565b6370a082319061063a610625306102f1565b9261062e610032565b95869485938493610361565b8352600483016103a1565b03915afa90811561068d575f9161065f575b5090896104e7565b610680915060203d8111610686575b6106788183610338565b810190610376565b5f610657565b503d61066e565b6103b6565b5095945095505050826106ad6106a75f610218565b91610116565b116106b8575b505050565b6106c46106c9916103d2565b6103de565b9163f3fef3a3919092803b15610748576106f65f80946107016106ea610032565b97889687958694610361565b845260048401610406565b03925af1801561074357610717575b80806106b3565b610736905f3d811161073c575b61072e8183610338565b8101906103ea565b5f610710565b503d610724565b6103b6565b6102fd565b5f7fb4fa3fb30000000000000000000000000000000000000000000000000000000081528061077e600482016101c7565b0390fd5b63ffffffff1690565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6107c46107bf6107c992610782565b610361565b61078b565b90565b151590565b60ff1690565b6107eb6107e66107f092610212565b610215565b6107d1565b90565b6107fc906107d7565b9052565b91602061082192949361081a60408201965f830190610394565b01906107f3565b565b909161086460049161085561083b63095ea7b36107b0565b9186610845610032565b9586946020860190815201610406565b60208201810382520382610338565b906108796108738284906109a3565b156107cc565b610883575b505050565b6108d060046108d5946108cb84916108bc6108a163095ea7b36107b0565b915f906108ac610032565b9687946020860190815201610800565b60208201810382520383610338565b610b95565b610b95565b5f808061087e565b5f90565b906108f46108ed610032565b9283610338565b565b67ffffffffffffffff811161091457610910602091610301565b0190565b61030b565b9061092b610926836108f6565b6108e1565b918252565b606090565b3d5f14610950576109453d610919565b903d5f602084013e5b565b610958610930565b9061094e565b5190565b61096b816107cc565b0361097257565b5f80fd5b9050519061098382610962565b565b9060208282031261099e5761099b915f01610976565b90565b61003c565b905f80916109af6108dd565b506109b9846102e5565b9082602082019151925af16109cc610935565b816109f7575b5090816109de575b5090565b6109f191506109ec906102e5565b610c01565b5f6109da565b9050610a028161095e565b610a14610a0e5f610218565b91610116565b14908115610a24575b505f6109d2565b610a3f91506020610a348261095e565b818301019101610985565b5f610a1d565b67ffffffffffffffff8111610a6357610a5f602091610301565b0190565b61030b565b90610a7a610a7583610a45565b6108e1565b918252565b5f7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564910152565b610ab06020610a68565b90610abd60208301610a7f565b565b610ac7610aa6565b90565b60209181520190565b60207f6f74207375636365656400000000000000000000000000000000000000000000917f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201520152565b610b2d602a604092610aca565b610b3681610ad3565b0190565b610b4f9060208101905f818303910152610b20565b90565b15610b5957565b610b61610032565b7f08c379a000000000000000000000000000000000000000000000000000000000815280610b9160048201610b3a565b0390fd5b610bde91610ba5610bb4926102e5565b90610bae610abf565b91610c21565b610bbd8161095e565b610bcf610bc95f610218565b91610116565b14908115610be0575b50610b52565b565b610bfb91506020610bf08261095e565b818301019101610985565b5f610bd8565b610c096108dd565b503b610c1d610c175f610218565b91610116565b1190565b90610c409291610c2f610930565b5090610c3a5f610218565b91610d11565b90565b610c4c906102d9565b90565b60207f722063616c6c0000000000000000000000000000000000000000000000000000917f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201520152565b610ca96026604092610aca565b610cb281610c4f565b0190565b610ccb9060208101905f818303910152610c9c565b90565b15610cd557565b610cdd610032565b7f08c379a000000000000000000000000000000000000000000000000000000000815280610d0d60048201610cb6565b0390fd5b915f8091610d679593610d22610930565b50610d49610d2f30610c43565b31610d42610d3c85610116565b91610116565b1015610cce565b8591602082019151925af191610d5d610935565b9092909192610e06565b90565b5f7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000910152565b610d9e601d602092610aca565b610da781610d6a565b0190565b610dc09060208101905f818303910152610d91565b90565b15610dca57565b610dd2610032565b7f08c379a000000000000000000000000000000000000000000000000000000000815280610e0260048201610dab565b0390fd5b919290610e11610930565b505f14610e555750610e228261095e565b610e34610e2e5f610218565b91610116565b14610e3e575b5090565b610e4a610e4f91610c01565b610dc3565b5f610e3a565b82610eb3565b5190565b90825f9392825e0152565b610e89610e92602093610e9793610e8081610e5b565b93848093610aca565b95869101610e5f565b610301565b0190565b610eb09160208201915f818403910152610e6a565b90565b90610ebd8261095e565b610ecf610ec95f610218565b91610116565b115f14610edf5750805190602001fd5b610f1a90610eeb610032565b9182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610e9b565b0390fd"
    public static let runtimeCode: Hex = "0x60806040526004361015610013575b610206565b61001d5f3561002c565b63ff2038850361000e576101cc565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b73ffffffffffffffffffffffffffffffffffffffff1690565b61006690610044565b90565b6100728161005d565b0361007957565b5f80fd5b9050359061008a82610069565b565b5f80fd5b5f80fd5b5f80fd5b909182601f830112156100d25781359167ffffffffffffffff83116100cd5760200192602083028401116100c857565b610094565b610090565b61008c565b909182601f830112156101115781359167ffffffffffffffff831161010c57602001926020830284011161010757565b610094565b610090565b61008c565b90565b61012281610116565b0361012957565b5f80fd5b9050359061013a82610119565b565b909160a0828403126101c257610154835f840161007d565b92602083013567ffffffffffffffff81116101bd5781610175918501610098565b92909360408101359167ffffffffffffffff83116101b85761019c846101b59484016100d7565b9390946101ac816060860161007d565b9360800161012d565b90565b610040565b610040565b61003c565b5f0190565b34610201576101eb6101df36600461013c565b95949094939193610438565b6101f3610032565b806101fd816101c7565b0390f35b610038565b5f80fd5b5090565b5090565b90565b90565b61022c61022761023192610212565b610215565b610116565b90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9190811015610271576020020190565b610234565b3561028081610119565b90565b9190811015610293576020020190565b610234565b356102a281610069565b90565b6102b96102b46102be92610044565b610215565b610044565b90565b6102ca906102a5565b90565b6102d6906102c1565b90565b6102e2906102a5565b90565b6102ee906102d9565b90565b6102fa906102d9565b90565b5f80fd5b601f801991011690565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b9061034290610301565b810190811067ffffffffffffffff82111761035c57604052565b61030b565b60e01b90565b9050519061037482610119565b565b9060208282031261038f5761038c915f01610367565b90565b61003c565b61039d9061005d565b9052565b91906103b4905f60208501940190610394565b565b6103be610032565b3d5f823e3d90fd5b6103cf906102a5565b90565b6103db906103c6565b90565b6103e7906102d9565b90565b5f9103126103f457565b61003c565b61040290610116565b9052565b91602061042792949361042060408201965f830190610394565b01906103f9565b565b60016104359101610116565b90565b9392919690949561044a86899061020a565b61046661046061045b86889061020e565b610116565b91610116565b0361074d576104745f610218565b5b8061049261048c6104878a8d9061020a565b610116565b91610116565b1015610692576104ac6104a785878491610261565b610276565b9089826104e16104db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610116565b91610116565b146105e6575b50816104fb6104f55f610218565b91610116565b11610510575b61050b9150610429565b610475565b61053861053061052b6105268d8c908691610283565b610298565b6102cd565b888491610823565b610549610544886103d2565b6103de565b9163f2b9fdb8906105656105608d8c908691610283565b610298565b9093803b156105e15761058b5f809461059661057f610032565b98899687958694610361565b845260048401610406565b03925af19182156105dc5761050b926105b0575b50610501565b6105cf905f3d81116105d5575b6105c78183610338565b8101906103ea565b5f6105aa565b503d6105bd565b6103b6565b6102fd565b61064591925061061361060e6106096106046020948d908891610283565b610298565b6102cd565b6102e5565b6370a082319061063a610625306102f1565b9261062e610032565b95869485938493610361565b8352600483016103a1565b03915afa90811561068d575f9161065f575b5090896104e7565b610680915060203d8111610686575b6106788183610338565b810190610376565b5f610657565b503d61066e565b6103b6565b5095945095505050826106ad6106a75f610218565b91610116565b116106b8575b505050565b6106c46106c9916103d2565b6103de565b9163f3fef3a3919092803b15610748576106f65f80946107016106ea610032565b97889687958694610361565b845260048401610406565b03925af1801561074357610717575b80806106b3565b610736905f3d811161073c575b61072e8183610338565b8101906103ea565b5f610710565b503d610724565b6103b6565b6102fd565b5f7fb4fa3fb30000000000000000000000000000000000000000000000000000000081528061077e600482016101c7565b0390fd5b63ffffffff1690565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6107c46107bf6107c992610782565b610361565b61078b565b90565b151590565b60ff1690565b6107eb6107e66107f092610212565b610215565b6107d1565b90565b6107fc906107d7565b9052565b91602061082192949361081a60408201965f830190610394565b01906107f3565b565b909161086460049161085561083b63095ea7b36107b0565b9186610845610032565b9586946020860190815201610406565b60208201810382520382610338565b906108796108738284906109a3565b156107cc565b610883575b505050565b6108d060046108d5946108cb84916108bc6108a163095ea7b36107b0565b915f906108ac610032565b9687946020860190815201610800565b60208201810382520383610338565b610b95565b610b95565b5f808061087e565b5f90565b906108f46108ed610032565b9283610338565b565b67ffffffffffffffff811161091457610910602091610301565b0190565b61030b565b9061092b610926836108f6565b6108e1565b918252565b606090565b3d5f14610950576109453d610919565b903d5f602084013e5b565b610958610930565b9061094e565b5190565b61096b816107cc565b0361097257565b5f80fd5b9050519061098382610962565b565b9060208282031261099e5761099b915f01610976565b90565b61003c565b905f80916109af6108dd565b506109b9846102e5565b9082602082019151925af16109cc610935565b816109f7575b5090816109de575b5090565b6109f191506109ec906102e5565b610c01565b5f6109da565b9050610a028161095e565b610a14610a0e5f610218565b91610116565b14908115610a24575b505f6109d2565b610a3f91506020610a348261095e565b818301019101610985565b5f610a1d565b67ffffffffffffffff8111610a6357610a5f602091610301565b0190565b61030b565b90610a7a610a7583610a45565b6108e1565b918252565b5f7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564910152565b610ab06020610a68565b90610abd60208301610a7f565b565b610ac7610aa6565b90565b60209181520190565b60207f6f74207375636365656400000000000000000000000000000000000000000000917f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201520152565b610b2d602a604092610aca565b610b3681610ad3565b0190565b610b4f9060208101905f818303910152610b20565b90565b15610b5957565b610b61610032565b7f08c379a000000000000000000000000000000000000000000000000000000000815280610b9160048201610b3a565b0390fd5b610bde91610ba5610bb4926102e5565b90610bae610abf565b91610c21565b610bbd8161095e565b610bcf610bc95f610218565b91610116565b14908115610be0575b50610b52565b565b610bfb91506020610bf08261095e565b818301019101610985565b5f610bd8565b610c096108dd565b503b610c1d610c175f610218565b91610116565b1190565b90610c409291610c2f610930565b5090610c3a5f610218565b91610d11565b90565b610c4c906102d9565b90565b60207f722063616c6c0000000000000000000000000000000000000000000000000000917f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201520152565b610ca96026604092610aca565b610cb281610c4f565b0190565b610ccb9060208101905f818303910152610c9c565b90565b15610cd557565b610cdd610032565b7f08c379a000000000000000000000000000000000000000000000000000000000815280610d0d60048201610cb6565b0390fd5b915f8091610d679593610d22610930565b50610d49610d2f30610c43565b31610d42610d3c85610116565b91610116565b1015610cce565b8591602082019151925af191610d5d610935565b9092909192610e06565b90565b5f7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000910152565b610d9e601d602092610aca565b610da781610d6a565b0190565b610dc09060208101905f818303910152610d91565b90565b15610dca57565b610dd2610032565b7f08c379a000000000000000000000000000000000000000000000000000000000815280610e0260048201610dab565b0390fd5b919290610e11610930565b505f14610e555750610e228261095e565b610e34610e2e5f610218565b91610116565b14610e3e575b5090565b610e4a610e4f91610c01565b610dc3565b5f610e3a565b82610eb3565b5190565b90825f9392825e0152565b610e89610e92602093610e9793610e8081610e5b565b93848093610aca565b95869101610e5f565b610301565b0190565b610eb09160208201915f818403910152610e6a565b90565b90610ebd8261095e565b610ecf610ec95f610218565b91610116565b115f14610edf5750805190602001fd5b610f1a90610eeb610032565b9182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610e9b565b0390fd"

    public static let InvalidInputError = ABI.Function(
        name: "InvalidInput",
        inputs: []
    )

    public enum RevertReason: Equatable, Error {
        case invalidInput
        case unknownRevert(String, String)
    }

    public static func rewrapError(_ error: ABI.Function, value: ABI.Value) -> RevertReason {
        switch (error, value) {
        case (InvalidInputError, _):
            return .invalidInput
        case let (e, v):
            return .unknownRevert(e.name, String(describing: v))
        }
    }

    public static let errors: [ABI.Function] = [InvalidInputError]
    public static let functions: [ABI.Function] = [runFn]
    public static let runFn = ABI.Function(
        name: "run",
        inputs: [.address, .array(.address), .array(.uint256), .address, .uint256],
        outputs: []
    )

    public static func run(comet: EthAddress, assets: [EthAddress], amounts: [BigUInt], baseAsset: EthAddress, borrow: BigUInt, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<Void, RevertReason> {
        do {
            let query = try runFn.encoded(with: [.address(comet), .array(.address, assets.map {
                .address($0)
            }), .array(.uint256, amounts.map {
                .uint256($0)
            }), .address(baseAsset), .uint256(borrow)])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try runFn.decode(output: result)

            switch decoded {
            case .tuple0:
                return .success(())
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, runFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static func runDecode(input: Hex) throws -> (EthAddress, [EthAddress], [BigUInt], EthAddress, BigUInt) {
        let decodedInput = try runFn.decodeInput(input: input)
        switch decodedInput {
        case let .tuple5(.address(comet), .array(.address, assets), .array(.uint256, amounts), .address(baseAsset), .uint256(borrow)):
            return (comet, assets.map { $0.asEthAddress! }, amounts.map { $0.asBigUInt! }, baseAsset, borrow)
        default:
            throw ABI.DecodeError.mismatchedType(decodedInput.schema, runFn.inputTuple)
        }
    }
}
