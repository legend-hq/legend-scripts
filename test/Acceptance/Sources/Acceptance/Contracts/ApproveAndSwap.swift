@preconcurrency import BigInt
@preconcurrency import Eth
import Foundation

public enum ApproveAndSwap {
    public static let creationCode: Hex = ""
    public static let runtimeCode: Hex = ""

    public static let ApproveAndSwapFailedError = ABI.Function(
        name: "ApproveAndSwapFailed",
        inputs: [.bytes]
    )

    public static let TooMuchSlippageError = ABI.Function(
        name: "TooMuchSlippage",
        inputs: [.uint256, .uint256]
    )

    public enum RevertReason: Equatable, Error {
        case approveAndSwapFailed(Hex)
        case tooMuchSlippage(BigUInt, BigUInt)
        case unknownRevert(String, String)
    }

    public static func rewrapError(_ error: ABI.Function, value: ABI.Value) -> RevertReason {
        switch (error, value) {
        case (ApproveAndSwapFailedError, let .tuple1(.bytes(data))):
            return .approveAndSwapFailed(data)
        case (TooMuchSlippageError, let .tuple2(.uint256(expectedBuyAmount), .uint256(actualBuyAmount))):
            return .tooMuchSlippage(expectedBuyAmount, actualBuyAmount)
        case let (e, v):
            return .unknownRevert(e.name, String(describing: v))
        }
    }

    public static let errors: [ABI.Function] = [ApproveAndSwapFailedError, TooMuchSlippageError]
    public static let functions: [ABI.Function] = [runFn]
    public static let runFn = ABI.Function(
        name: "run",
        inputs: [.address, .address, .uint256, .address, .uint256, .bytes],
        outputs: []
    )

    public static func run(to: EthAddress, sellToken: EthAddress, sellAmount: BigUInt, buyToken: EthAddress, buyAmount: BigUInt, data: Hex, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<Void, RevertReason> {
        do {
            let query = try runFn.encoded(with: [.address(to), .address(sellToken), .uint256(sellAmount), .address(buyToken), .uint256(buyAmount), .bytes(data)])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try runFn.decode(output: result)

            switch decoded {
            case .tuple0:
                return .success(())
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, runFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static func runDecode(input: Hex) throws -> (EthAddress, EthAddress, BigUInt, EthAddress, BigUInt, Hex) {
        let decodedInput = try runFn.decodeInput(input: input)
        switch decodedInput {
        case let .tuple6(.address(to), .address(sellToken), .uint256(sellAmount), .address(buyToken), .uint256(buyAmount), .bytes(data)):
            return (to, sellToken, sellAmount, buyToken, buyAmount, data)
        default:
            throw ABI.DecodeError.mismatchedType(decodedInput.schema, runFn.inputTuple)
        }
    }
}
