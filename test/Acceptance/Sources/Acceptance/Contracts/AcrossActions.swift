@preconcurrency import BigInt
@preconcurrency import Eth
import Foundation

public enum AcrossActions {
    public static let creationCode: Hex = "0x608060405234601c57600e6020565b610d4761002b8239610d4790f35b6026565b60405190565b5f80fdfe60a06040526004361015610013575b610282565b61001d5f3561002c565b63bf9ca86b0361000e57610246565b60e01c90565b60405190565b5f80fd5b5f80fd5b73ffffffffffffffffffffffffffffffffffffffff1690565b61006290610040565b90565b61006e81610059565b0361007557565b5f80fd5b9050359061008682610065565b565b90565b61009481610088565b0361009b57565b5f80fd5b905035906100ac8261008b565b565b63ffffffff1690565b6100c0816100ae565b036100c757565b5f80fd5b905035906100d8826100b7565b565b5f80fd5b5f80fd5b5f80fd5b909182601f830112156101205781359167ffffffffffffffff831161011b57602001926001830284011161011657565b6100e2565b6100de565b6100da565b151590565b61013381610125565b0361013a57565b5f80fd5b9050359061014b8261012a565b565b916101c08383031261023c57610165825f8501610079565b926101738360208301610079565b926101818160408401610079565b9261018f8260608501610079565b9261019d8360808301610079565b926101ab8160a0840161009f565b926101b98260c0850161009f565b926101c78360e0830161009f565b926101d6816101008401610079565b926101e58261012085016100cb565b926101f48361014083016100cb565b926102038161016084016100cb565b9261018083013567ffffffffffffffff811161023757610228836102349286016100e6565b9390946101a00161013e565b90565b61003c565b610038565b5f0190565b61026c61025436600461014d565b9d9c909c9b919b9a929a9993999894989795976104ad565b610274610032565b8061027e81610241565b0390f35b5f80fd5b90565b61029d6102986102a292610040565b610286565b610040565b90565b6102ae90610289565b90565b6102ba906102a5565b90565b6102c690610289565b90565b6102d2906102bd565b90565b6102de90610289565b90565b6102ea906102d5565b90565b90565b6103046102ff610309926102ed565b610286565b610088565b90565b5f80fd5b601f801991011690565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b9061035190610310565b810190811067ffffffffffffffff82111761036b57604052565b61031a565b60e01b90565b5f91031261038057565b610038565b61038e90610059565b9052565b61039b90610088565b9052565b6103a8906100ae565b9052565b60209181520190565b90825f939282370152565b91906103da816103d3816103df956103ac565b80956103b5565b610310565b0190565b99979593919c9a98969492909b9c6101808b019c5f8c0161040391610385565b60208b0161041091610385565b60408a0161041d91610385565b6060890161042a91610385565b6080880161043791610392565b60a0870161044491610392565b60c0860161045191610392565b60e0850161045e91610385565b610100840161046c9161039f565b610120830161047a9161039f565b61014082016104889161039f565b80830390610160015261049a926103c0565b90565b6104a5610032565b3d5f823e3d90fd5b6104dd849b97939f9c989491959e9a96929d99956104d86104d06104e2946102b1565b828691610660565b6102c9565b6102e1565b9c8d9a637b9392329c5f1461058f57829c5b9c9d9f909192939495969798999a9b3b1561058a575f9f6105226105319e61051a610032565b608052610370565b608051526004608051016103e3565b9160805192608051900391608051915af180156105855761054f575b565b5f3d8111610579575b8061056861057492608051610347565b60805101608051610376565b61054d565b506105743d9050610558565b61049d565b61030c565b6105985f6102f0565b9c6104f4565b6105a7906102d5565b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6105e36105de6105e8926100ae565b610370565b6105aa565b90565b91602061060c92949361060560408201965f830190610385565b0190610392565b565b60ff1690565b61062861062361062d926102ed565b610286565b61060e565b90565b61063990610614565b9052565b91602061065e92949361065760408201965f830190610385565b0190610630565b565b90916106a160049161069261067863095ea7b36105cf565b9186610682610032565b95869460208601908152016105eb565b60208201810382520382610347565b906106b66106b08284906107cc565b15610125565b6106c0575b505050565b61070d60046107129461070884916106f96106de63095ea7b36105cf565b915f906106e9610032565b968794602086019081520161063d565b60208201810382520383610347565b6109be565b6109be565b5f80806106bb565b5f90565b9061073161072a610032565b9283610347565b565b67ffffffffffffffff81116107515761074d602091610310565b0190565b61031a565b9061076861076383610733565b61071e565b918252565b606090565b3d5f1461078d576107823d610756565b903d5f602084013e5b565b61079561076d565b9061078b565b5190565b905051906107ac8261012a565b565b906020828203126107c7576107c4915f0161079f565b90565b610038565b905f80916107d861071a565b506107e28461059e565b9082602082019151925af16107f5610772565b81610820575b509081610807575b5090565b61081a91506108159061059e565b610a2a565b5f610803565b905061082b8161079b565b61083d6108375f6102f0565b91610088565b1490811561084d575b505f6107fb565b6108689150602061085d8261079b565b8183010191016107ae565b5f610846565b67ffffffffffffffff811161088c57610888602091610310565b0190565b61031a565b906108a361089e8361086e565b61071e565b918252565b5f7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564910152565b6108d96020610891565b906108e6602083016108a8565b565b6108f06108cf565b90565b60209181520190565b60207f6f74207375636365656400000000000000000000000000000000000000000000917f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201520152565b610956602a6040926108f3565b61095f816108fc565b0190565b6109789060208101905f818303910152610949565b90565b1561098257565b61098a610032565b7f08c379a0000000000000000000000000000000000000000000000000000000008152806109ba60048201610963565b0390fd5b610a07916109ce6109dd9261059e565b906109d76108e8565b91610a4a565b6109e68161079b565b6109f86109f25f6102f0565b91610088565b14908115610a09575b5061097b565b565b610a2491506020610a198261079b565b8183010191016107ae565b5f610a01565b610a3261071a565b503b610a46610a405f6102f0565b91610088565b1190565b90610a699291610a5861076d565b5090610a635f6102f0565b91610b3a565b90565b610a75906102d5565b90565b60207f722063616c6c0000000000000000000000000000000000000000000000000000917f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201520152565b610ad260266040926108f3565b610adb81610a78565b0190565b610af49060208101905f818303910152610ac5565b90565b15610afe57565b610b06610032565b7f08c379a000000000000000000000000000000000000000000000000000000000815280610b3660048201610adf565b0390fd5b915f8091610b909593610b4b61076d565b50610b72610b5830610a6c565b31610b6b610b6585610088565b91610088565b1015610af7565b8591602082019151925af191610b86610772565b9092909192610c2f565b90565b5f7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000910152565b610bc7601d6020926108f3565b610bd081610b93565b0190565b610be99060208101905f818303910152610bba565b90565b15610bf357565b610bfb610032565b7f08c379a000000000000000000000000000000000000000000000000000000000815280610c2b60048201610bd4565b0390fd5b919290610c3a61076d565b505f14610c7e5750610c4b8261079b565b610c5d610c575f6102f0565b91610088565b14610c67575b5090565b610c73610c7891610a2a565b610bec565b5f610c63565b82610cdc565b5190565b90825f9392825e0152565b610cb2610cbb602093610cc093610ca981610c84565b938480936108f3565b95869101610c88565b610310565b0190565b610cd99160208201915f818403910152610c93565b90565b90610ce68261079b565b610cf8610cf25f6102f0565b91610088565b115f14610d085750805190602001fd5b610d4390610d14610032565b9182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610cc4565b0390fd"
    public static let runtimeCode: Hex = "0x60a06040526004361015610013575b610282565b61001d5f3561002c565b63bf9ca86b0361000e57610246565b60e01c90565b60405190565b5f80fd5b5f80fd5b73ffffffffffffffffffffffffffffffffffffffff1690565b61006290610040565b90565b61006e81610059565b0361007557565b5f80fd5b9050359061008682610065565b565b90565b61009481610088565b0361009b57565b5f80fd5b905035906100ac8261008b565b565b63ffffffff1690565b6100c0816100ae565b036100c757565b5f80fd5b905035906100d8826100b7565b565b5f80fd5b5f80fd5b5f80fd5b909182601f830112156101205781359167ffffffffffffffff831161011b57602001926001830284011161011657565b6100e2565b6100de565b6100da565b151590565b61013381610125565b0361013a57565b5f80fd5b9050359061014b8261012a565b565b916101c08383031261023c57610165825f8501610079565b926101738360208301610079565b926101818160408401610079565b9261018f8260608501610079565b9261019d8360808301610079565b926101ab8160a0840161009f565b926101b98260c0850161009f565b926101c78360e0830161009f565b926101d6816101008401610079565b926101e58261012085016100cb565b926101f48361014083016100cb565b926102038161016084016100cb565b9261018083013567ffffffffffffffff811161023757610228836102349286016100e6565b9390946101a00161013e565b90565b61003c565b610038565b5f0190565b61026c61025436600461014d565b9d9c909c9b919b9a929a9993999894989795976104ad565b610274610032565b8061027e81610241565b0390f35b5f80fd5b90565b61029d6102986102a292610040565b610286565b610040565b90565b6102ae90610289565b90565b6102ba906102a5565b90565b6102c690610289565b90565b6102d2906102bd565b90565b6102de90610289565b90565b6102ea906102d5565b90565b90565b6103046102ff610309926102ed565b610286565b610088565b90565b5f80fd5b601f801991011690565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b9061035190610310565b810190811067ffffffffffffffff82111761036b57604052565b61031a565b60e01b90565b5f91031261038057565b610038565b61038e90610059565b9052565b61039b90610088565b9052565b6103a8906100ae565b9052565b60209181520190565b90825f939282370152565b91906103da816103d3816103df956103ac565b80956103b5565b610310565b0190565b99979593919c9a98969492909b9c6101808b019c5f8c0161040391610385565b60208b0161041091610385565b60408a0161041d91610385565b6060890161042a91610385565b6080880161043791610392565b60a0870161044491610392565b60c0860161045191610392565b60e0850161045e91610385565b610100840161046c9161039f565b610120830161047a9161039f565b61014082016104889161039f565b80830390610160015261049a926103c0565b90565b6104a5610032565b3d5f823e3d90fd5b6104dd849b97939f9c989491959e9a96929d99956104d86104d06104e2946102b1565b828691610660565b6102c9565b6102e1565b9c8d9a637b9392329c5f1461058f57829c5b9c9d9f909192939495969798999a9b3b1561058a575f9f6105226105319e61051a610032565b608052610370565b608051526004608051016103e3565b9160805192608051900391608051915af180156105855761054f575b565b5f3d8111610579575b8061056861057492608051610347565b60805101608051610376565b61054d565b506105743d9050610558565b61049d565b61030c565b6105985f6102f0565b9c6104f4565b6105a7906102d5565b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6105e36105de6105e8926100ae565b610370565b6105aa565b90565b91602061060c92949361060560408201965f830190610385565b0190610392565b565b60ff1690565b61062861062361062d926102ed565b610286565b61060e565b90565b61063990610614565b9052565b91602061065e92949361065760408201965f830190610385565b0190610630565b565b90916106a160049161069261067863095ea7b36105cf565b9186610682610032565b95869460208601908152016105eb565b60208201810382520382610347565b906106b66106b08284906107cc565b15610125565b6106c0575b505050565b61070d60046107129461070884916106f96106de63095ea7b36105cf565b915f906106e9610032565b968794602086019081520161063d565b60208201810382520383610347565b6109be565b6109be565b5f80806106bb565b5f90565b9061073161072a610032565b9283610347565b565b67ffffffffffffffff81116107515761074d602091610310565b0190565b61031a565b9061076861076383610733565b61071e565b918252565b606090565b3d5f1461078d576107823d610756565b903d5f602084013e5b565b61079561076d565b9061078b565b5190565b905051906107ac8261012a565b565b906020828203126107c7576107c4915f0161079f565b90565b610038565b905f80916107d861071a565b506107e28461059e565b9082602082019151925af16107f5610772565b81610820575b509081610807575b5090565b61081a91506108159061059e565b610a2a565b5f610803565b905061082b8161079b565b61083d6108375f6102f0565b91610088565b1490811561084d575b505f6107fb565b6108689150602061085d8261079b565b8183010191016107ae565b5f610846565b67ffffffffffffffff811161088c57610888602091610310565b0190565b61031a565b906108a361089e8361086e565b61071e565b918252565b5f7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564910152565b6108d96020610891565b906108e6602083016108a8565b565b6108f06108cf565b90565b60209181520190565b60207f6f74207375636365656400000000000000000000000000000000000000000000917f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201520152565b610956602a6040926108f3565b61095f816108fc565b0190565b6109789060208101905f818303910152610949565b90565b1561098257565b61098a610032565b7f08c379a0000000000000000000000000000000000000000000000000000000008152806109ba60048201610963565b0390fd5b610a07916109ce6109dd9261059e565b906109d76108e8565b91610a4a565b6109e68161079b565b6109f86109f25f6102f0565b91610088565b14908115610a09575b5061097b565b565b610a2491506020610a198261079b565b8183010191016107ae565b5f610a01565b610a3261071a565b503b610a46610a405f6102f0565b91610088565b1190565b90610a699291610a5861076d565b5090610a635f6102f0565b91610b3a565b90565b610a75906102d5565b90565b60207f722063616c6c0000000000000000000000000000000000000000000000000000917f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201520152565b610ad260266040926108f3565b610adb81610a78565b0190565b610af49060208101905f818303910152610ac5565b90565b15610afe57565b610b06610032565b7f08c379a000000000000000000000000000000000000000000000000000000000815280610b3660048201610adf565b0390fd5b915f8091610b909593610b4b61076d565b50610b72610b5830610a6c565b31610b6b610b6585610088565b91610088565b1015610af7565b8591602082019151925af191610b86610772565b9092909192610c2f565b90565b5f7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000910152565b610bc7601d6020926108f3565b610bd081610b93565b0190565b610be99060208101905f818303910152610bba565b90565b15610bf357565b610bfb610032565b7f08c379a000000000000000000000000000000000000000000000000000000000815280610c2b60048201610bd4565b0390fd5b919290610c3a61076d565b505f14610c7e5750610c4b8261079b565b610c5d610c575f6102f0565b91610088565b14610c67575b5090565b610c73610c7891610a2a565b610bec565b5f610c63565b82610cdc565b5190565b90825f9392825e0152565b610cb2610cbb602093610cc093610ca981610c84565b938480936108f3565b95869101610c88565b610310565b0190565b610cd99160208201915f818403910152610c93565b90565b90610ce68261079b565b610cf8610cf25f6102f0565b91610088565b115f14610d085750805190602001fd5b610d4390610d14610032565b9182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610cc4565b0390fd"

    public enum RevertReason: Equatable, Error {
        case unknownRevert(String, String)
    }

    public static func rewrapError(_ error: ABI.Function, value: ABI.Value) -> RevertReason {
        switch (error, value) {
        case let (e, v):
            return .unknownRevert(e.name, String(describing: v))
        }
    }

    public static let errors: [ABI.Function] = []
    public static let functions: [ABI.Function] = [depositV3Fn]
    public static let depositV3Fn = ABI.Function(
        name: "depositV3",
        inputs: [.address, .address, .address, .address, .address, .uint256, .uint256, .uint256, .address, .uint32, .uint32, .uint32, .bytes, .bool],
        outputs: []
    )

    public static func depositV3(spokePool: EthAddress, depositor: EthAddress, recipient: EthAddress, inputToken: EthAddress, outputToken: EthAddress, inputAmount: BigUInt, outputAmount: BigUInt, destinationChainId: BigUInt, exclusiveRelayer: EthAddress, quoteTimestamp: UInt, fillDeadline: UInt, exclusivityDeadline: UInt, message: Hex, useNativeToken: Bool, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<Void, RevertReason> {
        do {
            let query = try depositV3Fn.encoded(with: [.address(spokePool), .address(depositor), .address(recipient), .address(inputToken), .address(outputToken), .uint256(inputAmount), .uint256(outputAmount), .uint256(destinationChainId), .address(exclusiveRelayer), .uint32(quoteTimestamp), .uint32(fillDeadline), .uint32(exclusivityDeadline), .bytes(message), .bool(useNativeToken)])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try depositV3Fn.decode(output: result)

            switch decoded {
            case .tuple0:
                return .success(())
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, depositV3Fn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static func depositV3Decode(input: Hex) throws -> (EthAddress, EthAddress, EthAddress, EthAddress, EthAddress, BigUInt, BigUInt, BigUInt, EthAddress, UInt, UInt, UInt, Hex, Bool) {
        let decodedInput = try depositV3Fn.decodeInput(input: input)
        switch decodedInput {
        case let .tuple14(.address(spokePool), .address(depositor), .address(recipient), .address(inputToken), .address(outputToken), .uint256(inputAmount), .uint256(outputAmount), .uint256(destinationChainId), .address(exclusiveRelayer), .uint32(quoteTimestamp), .uint32(fillDeadline), .uint32(exclusivityDeadline), .bytes(message), .bool(useNativeToken)):
            return (spokePool, depositor, recipient, inputToken, outputToken, inputAmount, outputAmount, destinationChainId, exclusiveRelayer, quoteTimestamp, fillDeadline, exclusivityDeadline, message, useNativeToken)
        default:
            throw ABI.DecodeError.mismatchedType(decodedInput.schema, depositV3Fn.inputTuple)
        }
    }
}
