@preconcurrency import BigInt
@preconcurrency import Eth
import Foundation

public enum QuarkBuilder {
    public enum Accounts {
        public struct AccountBalance: Equatable {
            public static let schema: ABI.Schema = .tuple([.address, .uint256])

            public let account: EthAddress
            public let balance: BigUInt

            public init(account: EthAddress, balance: BigUInt) {
                self.account = account
                self.balance = balance
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple2(.address(account),
                        .uint256(balance))
            }

            public static func decode(hex: Hex) throws -> Accounts.AccountBalance {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.AccountBalance {
                switch value {
                case let .tuple2(.address(account),
                                 .uint256(balance)):
                    return Accounts.AccountBalance(account: account, balance: balance)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct AssetPositions: Equatable {
            public static let schema: ABI.Schema = .tuple([.address, .string, .uint256, .uint256, .array(Accounts.AccountBalance.schema)])

            public let asset: EthAddress
            public let symbol: String
            public let decimals: BigUInt
            public let usdPrice: BigUInt
            public let accountBalances: [Accounts.AccountBalance]

            public init(asset: EthAddress, symbol: String, decimals: BigUInt, usdPrice: BigUInt, accountBalances: [Accounts.AccountBalance]) {
                self.asset = asset
                self.symbol = symbol
                self.decimals = decimals
                self.usdPrice = usdPrice
                self.accountBalances = accountBalances
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple5(.address(asset),
                        .string(symbol),
                        .uint256(decimals),
                        .uint256(usdPrice),
                        .array(Accounts.AccountBalance.schema, accountBalances.map {
                            $0.asValue
                        }))
            }

            public static func decode(hex: Hex) throws -> Accounts.AssetPositions {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.AssetPositions {
                switch value {
                case let .tuple5(.address(asset),
                                 .string(symbol),
                                 .uint256(decimals),
                                 .uint256(usdPrice),
                                 .array(Accounts.AccountBalance.schema, accountBalances)):
                    return try Accounts.AssetPositions(asset: asset, symbol: symbol, decimals: decimals, usdPrice: usdPrice, accountBalances: accountBalances.map {
                        try Accounts.AccountBalance.decodeValue($0)
                    })
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct ChainAccounts: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])

            public let chainId: BigUInt
            public let quarkSecrets: [Accounts.QuarkSecret]
            public let assetPositionsList: [Accounts.AssetPositions]
            public let cometPositions: [Accounts.CometPositions]
            public let morphoPositions: [Accounts.MorphoPositions]
            public let morphoVaultPositions: [Accounts.MorphoVaultPositions]

            public init(chainId: BigUInt, quarkSecrets: [Accounts.QuarkSecret], assetPositionsList: [Accounts.AssetPositions], cometPositions: [Accounts.CometPositions], morphoPositions: [Accounts.MorphoPositions], morphoVaultPositions: [Accounts.MorphoVaultPositions]) {
                self.chainId = chainId
                self.quarkSecrets = quarkSecrets
                self.assetPositionsList = assetPositionsList
                self.cometPositions = cometPositions
                self.morphoPositions = morphoPositions
                self.morphoVaultPositions = morphoVaultPositions
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple6(.uint256(chainId),
                        .array(Accounts.QuarkSecret.schema, quarkSecrets.map {
                            $0.asValue
                        }),
                        .array(Accounts.AssetPositions.schema, assetPositionsList.map {
                            $0.asValue
                        }),
                        .array(Accounts.CometPositions.schema, cometPositions.map {
                            $0.asValue
                        }),
                        .array(Accounts.MorphoPositions.schema, morphoPositions.map {
                            $0.asValue
                        }),
                        .array(Accounts.MorphoVaultPositions.schema, morphoVaultPositions.map {
                            $0.asValue
                        }))
            }

            public static func decode(hex: Hex) throws -> Accounts.ChainAccounts {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.ChainAccounts {
                switch value {
                case let .tuple6(.uint256(chainId),
                                 .array(Accounts.QuarkSecret.schema, quarkSecrets),
                                 .array(Accounts.AssetPositions.schema, assetPositionsList),
                                 .array(Accounts.CometPositions.schema, cometPositions),
                                 .array(Accounts.MorphoPositions.schema, morphoPositions),
                                 .array(Accounts.MorphoVaultPositions.schema, morphoVaultPositions)):
                    return try Accounts.ChainAccounts(chainId: chainId, quarkSecrets: quarkSecrets.map {
                        try Accounts.QuarkSecret.decodeValue($0)
                    }, assetPositionsList: assetPositionsList.map {
                        try Accounts.AssetPositions.decodeValue($0)
                    }, cometPositions: cometPositions.map {
                        try Accounts.CometPositions.decodeValue($0)
                    }, morphoPositions: morphoPositions.map {
                        try Accounts.MorphoPositions.decodeValue($0)
                    }, morphoVaultPositions: morphoVaultPositions.map {
                        try Accounts.MorphoVaultPositions.decodeValue($0)
                    })
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct CometBasePosition: Equatable {
            public static let schema: ABI.Schema = .tuple([.address, .array(.address), .array(.uint256), .array(.uint256)])

            public let asset: EthAddress
            public let accounts: [EthAddress]
            public let borrowed: [BigUInt]
            public let supplied: [BigUInt]

            public init(asset: EthAddress, accounts: [EthAddress], borrowed: [BigUInt], supplied: [BigUInt]) {
                self.asset = asset
                self.accounts = accounts
                self.borrowed = borrowed
                self.supplied = supplied
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple4(.address(asset),
                        .array(.address, accounts.map {
                            .address($0)
                        }),
                        .array(.uint256, borrowed.map {
                            .uint256($0)
                        }),
                        .array(.uint256, supplied.map {
                            .uint256($0)
                        }))
            }

            public static func decode(hex: Hex) throws -> Accounts.CometBasePosition {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.CometBasePosition {
                switch value {
                case let .tuple4(.address(asset),
                                 .array(.address, accounts),
                                 .array(.uint256, borrowed),
                                 .array(.uint256, supplied)):
                    return Accounts.CometBasePosition(asset: asset, accounts: accounts.map {
                        $0.asEthAddress!
                    }, borrowed: borrowed.map {
                        $0.asBigUInt!
                    }, supplied: supplied.map {
                        $0.asBigUInt!
                    })
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct CometCollateralPosition: Equatable {
            public static let schema: ABI.Schema = .tuple([.address, .array(.address), .array(.uint256)])

            public let asset: EthAddress
            public let accounts: [EthAddress]
            public let balances: [BigUInt]

            public init(asset: EthAddress, accounts: [EthAddress], balances: [BigUInt]) {
                self.asset = asset
                self.accounts = accounts
                self.balances = balances
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple3(.address(asset),
                        .array(.address, accounts.map {
                            .address($0)
                        }),
                        .array(.uint256, balances.map {
                            .uint256($0)
                        }))
            }

            public static func decode(hex: Hex) throws -> Accounts.CometCollateralPosition {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.CometCollateralPosition {
                switch value {
                case let .tuple3(.address(asset),
                                 .array(.address, accounts),
                                 .array(.uint256, balances)):
                    return Accounts.CometCollateralPosition(asset: asset, accounts: accounts.map {
                        $0.asEthAddress!
                    }, balances: balances.map {
                        $0.asBigUInt!
                    })
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct CometPositions: Equatable {
            public static let schema: ABI.Schema = .tuple([.address, Accounts.CometBasePosition.schema, .array(Accounts.CometCollateralPosition.schema)])

            public let comet: EthAddress
            public let basePosition: Accounts.CometBasePosition
            public let collateralPositions: [Accounts.CometCollateralPosition]

            public init(comet: EthAddress, basePosition: Accounts.CometBasePosition, collateralPositions: [Accounts.CometCollateralPosition]) {
                self.comet = comet
                self.basePosition = basePosition
                self.collateralPositions = collateralPositions
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple3(.address(comet),
                        basePosition.asValue,
                        .array(Accounts.CometCollateralPosition.schema, collateralPositions.map {
                            $0.asValue
                        }))
            }

            public static func decode(hex: Hex) throws -> Accounts.CometPositions {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.CometPositions {
                switch value {
                case let .tuple3(.address(comet),
                                 basePosition,
                                 .array(Accounts.CometCollateralPosition.schema, collateralPositions)):
                    return try Accounts.CometPositions(comet: comet, basePosition: Accounts.CometBasePosition.decodeValue(basePosition), collateralPositions: collateralPositions.map {
                        try Accounts.CometCollateralPosition.decodeValue($0)
                    })
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct MorphoBorrowPosition: Equatable {
            public static let schema: ABI.Schema = .tuple([.array(.address), .array(.uint256)])

            public let accounts: [EthAddress]
            public let borrowed: [BigUInt]

            public init(accounts: [EthAddress], borrowed: [BigUInt]) {
                self.accounts = accounts
                self.borrowed = borrowed
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple2(.array(.address, accounts.map {
                    .address($0)
                }),
                .array(.uint256, borrowed.map {
                    .uint256($0)
                }))
            }

            public static func decode(hex: Hex) throws -> Accounts.MorphoBorrowPosition {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.MorphoBorrowPosition {
                switch value {
                case let .tuple2(.array(.address, accounts),
                                 .array(.uint256, borrowed)):
                    return Accounts.MorphoBorrowPosition(accounts: accounts.map {
                        $0.asEthAddress!
                    }, borrowed: borrowed.map {
                        $0.asBigUInt!
                    })
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct MorphoCollateralPosition: Equatable {
            public static let schema: ABI.Schema = .tuple([.array(.address), .array(.uint256)])

            public let accounts: [EthAddress]
            public let balances: [BigUInt]

            public init(accounts: [EthAddress], balances: [BigUInt]) {
                self.accounts = accounts
                self.balances = balances
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple2(.array(.address, accounts.map {
                    .address($0)
                }),
                .array(.uint256, balances.map {
                    .uint256($0)
                }))
            }

            public static func decode(hex: Hex) throws -> Accounts.MorphoCollateralPosition {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.MorphoCollateralPosition {
                switch value {
                case let .tuple2(.array(.address, accounts),
                                 .array(.uint256, balances)):
                    return Accounts.MorphoCollateralPosition(accounts: accounts.map {
                        $0.asEthAddress!
                    }, balances: balances.map {
                        $0.asBigUInt!
                    })
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct MorphoPositions: Equatable {
            public static let schema: ABI.Schema = .tuple([.bytes32, .address, .address, .address, Accounts.MorphoBorrowPosition.schema, Accounts.MorphoCollateralPosition.schema])

            public let marketId: Hex
            public let morpho: EthAddress
            public let loanToken: EthAddress
            public let collateralToken: EthAddress
            public let borrowPosition: Accounts.MorphoBorrowPosition
            public let collateralPosition: Accounts.MorphoCollateralPosition

            public init(marketId: Hex, morpho: EthAddress, loanToken: EthAddress, collateralToken: EthAddress, borrowPosition: Accounts.MorphoBorrowPosition, collateralPosition: Accounts.MorphoCollateralPosition) {
                self.marketId = marketId
                self.morpho = morpho
                self.loanToken = loanToken
                self.collateralToken = collateralToken
                self.borrowPosition = borrowPosition
                self.collateralPosition = collateralPosition
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple6(.bytes32(marketId),
                        .address(morpho),
                        .address(loanToken),
                        .address(collateralToken),
                        borrowPosition.asValue,
                        collateralPosition.asValue)
            }

            public static func decode(hex: Hex) throws -> Accounts.MorphoPositions {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.MorphoPositions {
                switch value {
                case let .tuple6(.bytes32(marketId),
                                 .address(morpho),
                                 .address(loanToken),
                                 .address(collateralToken),
                                 borrowPosition,
                                 collateralPosition):
                    return try Accounts.MorphoPositions(marketId: marketId, morpho: morpho, loanToken: loanToken, collateralToken: collateralToken, borrowPosition: Accounts.MorphoBorrowPosition.decodeValue(borrowPosition), collateralPosition: Accounts.MorphoCollateralPosition.decodeValue(collateralPosition))
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct MorphoVaultPositions: Equatable {
            public static let schema: ABI.Schema = .tuple([.address, .array(.address), .array(.uint256), .address])

            public let asset: EthAddress
            public let accounts: [EthAddress]
            public let balances: [BigUInt]
            public let vault: EthAddress

            public init(asset: EthAddress, accounts: [EthAddress], balances: [BigUInt], vault: EthAddress) {
                self.asset = asset
                self.accounts = accounts
                self.balances = balances
                self.vault = vault
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple4(.address(asset),
                        .array(.address, accounts.map {
                            .address($0)
                        }),
                        .array(.uint256, balances.map {
                            .uint256($0)
                        }),
                        .address(vault))
            }

            public static func decode(hex: Hex) throws -> Accounts.MorphoVaultPositions {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.MorphoVaultPositions {
                switch value {
                case let .tuple4(.address(asset),
                                 .array(.address, accounts),
                                 .array(.uint256, balances),
                                 .address(vault)):
                    return Accounts.MorphoVaultPositions(asset: asset, accounts: accounts.map {
                        $0.asEthAddress!
                    }, balances: balances.map {
                        $0.asBigUInt!
                    }, vault: vault)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct QuarkSecret: Equatable {
            public static let schema: ABI.Schema = .tuple([.address, .bytes32])

            public let account: EthAddress
            public let nonceSecret: Hex

            public init(account: EthAddress, nonceSecret: Hex) {
                self.account = account
                self.nonceSecret = nonceSecret
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple2(.address(account),
                        .bytes32(nonceSecret))
            }

            public static func decode(hex: Hex) throws -> Accounts.QuarkSecret {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Accounts.QuarkSecret {
                switch value {
                case let .tuple2(.address(account),
                                 .bytes32(nonceSecret)):
                    return Accounts.QuarkSecret(account: account, nonceSecret: nonceSecret)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum Actions {
        public struct Action: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .address, .string, .bytes, .bytes, .string, .bytes32, .uint256])

            public let chainId: BigUInt
            public let quarkAccount: EthAddress
            public let actionType: String
            public let actionContext: Hex
            public let quotePayActionContext: Hex
            public let paymentMethod: String
            public let nonceSecret: Hex
            public let totalPlays: BigUInt

            public init(chainId: BigUInt, quarkAccount: EthAddress, actionType: String, actionContext: Hex, quotePayActionContext: Hex, paymentMethod: String, nonceSecret: Hex, totalPlays: BigUInt) {
                self.chainId = chainId
                self.quarkAccount = quarkAccount
                self.actionType = actionType
                self.actionContext = actionContext
                self.quotePayActionContext = quotePayActionContext
                self.paymentMethod = paymentMethod
                self.nonceSecret = nonceSecret
                self.totalPlays = totalPlays
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple8(.uint256(chainId),
                        .address(quarkAccount),
                        .string(actionType),
                        .bytes(actionContext),
                        .bytes(quotePayActionContext),
                        .string(paymentMethod),
                        .bytes32(nonceSecret),
                        .uint256(totalPlays))
            }

            public static func decode(hex: Hex) throws -> Actions.Action {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Actions.Action {
                switch value {
                case let .tuple8(.uint256(chainId),
                                 .address(quarkAccount),
                                 .string(actionType),
                                 .bytes(actionContext),
                                 .bytes(quotePayActionContext),
                                 .string(paymentMethod),
                                 .bytes32(nonceSecret),
                                 .uint256(totalPlays)):
                    return Actions.Action(chainId: chainId, quarkAccount: quarkAccount, actionType: actionType, actionContext: actionContext, quotePayActionContext: quotePayActionContext, paymentMethod: paymentMethod, nonceSecret: nonceSecret, totalPlays: totalPlays)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum CometActionsBuilder {
        public struct CometBorrowIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .string, .uint256, .address, .uint256, .array(.uint256), .array(.string), .address, .bool])

            public let amount: BigUInt
            public let assetSymbol: String
            public let blockTimestamp: BigUInt
            public let borrower: EthAddress
            public let chainId: BigUInt
            public let collateralAmounts: [BigUInt]
            public let collateralAssetSymbols: [String]
            public let comet: EthAddress
            public let preferAcross: Bool

            public init(amount: BigUInt, assetSymbol: String, blockTimestamp: BigUInt, borrower: EthAddress, chainId: BigUInt, collateralAmounts: [BigUInt], collateralAssetSymbols: [String], comet: EthAddress, preferAcross: Bool) {
                self.amount = amount
                self.assetSymbol = assetSymbol
                self.blockTimestamp = blockTimestamp
                self.borrower = borrower
                self.chainId = chainId
                self.collateralAmounts = collateralAmounts
                self.collateralAssetSymbols = collateralAssetSymbols
                self.comet = comet
                self.preferAcross = preferAcross
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple9(.uint256(amount),
                        .string(assetSymbol),
                        .uint256(blockTimestamp),
                        .address(borrower),
                        .uint256(chainId),
                        .array(.uint256, collateralAmounts.map {
                            .uint256($0)
                        }),
                        .array(.string, collateralAssetSymbols.map {
                            .string($0)
                        }),
                        .address(comet),
                        .bool(preferAcross))
            }

            public static func decode(hex: Hex) throws -> CometActionsBuilder.CometBorrowIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> CometActionsBuilder.CometBorrowIntent {
                switch value {
                case let .tuple9(.uint256(amount),
                                 .string(assetSymbol),
                                 .uint256(blockTimestamp),
                                 .address(borrower),
                                 .uint256(chainId),
                                 .array(.uint256, collateralAmounts),
                                 .array(.string, collateralAssetSymbols),
                                 .address(comet),
                                 .bool(preferAcross)):
                    return CometActionsBuilder.CometBorrowIntent(amount: amount, assetSymbol: assetSymbol, blockTimestamp: blockTimestamp, borrower: borrower, chainId: chainId, collateralAmounts: collateralAmounts.map {
                        $0.asBigUInt!
                    }, collateralAssetSymbols: collateralAssetSymbols.map {
                        $0.asString!
                    }, comet: comet, preferAcross: preferAcross)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct CometRepayIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .string, .uint256, .uint256, .array(.uint256), .array(.string), .address, .address, .bool])

            public let amount: BigUInt
            public let assetSymbol: String
            public let blockTimestamp: BigUInt
            public let chainId: BigUInt
            public let collateralAmounts: [BigUInt]
            public let collateralAssetSymbols: [String]
            public let comet: EthAddress
            public let repayer: EthAddress
            public let preferAcross: Bool

            public init(amount: BigUInt, assetSymbol: String, blockTimestamp: BigUInt, chainId: BigUInt, collateralAmounts: [BigUInt], collateralAssetSymbols: [String], comet: EthAddress, repayer: EthAddress, preferAcross: Bool) {
                self.amount = amount
                self.assetSymbol = assetSymbol
                self.blockTimestamp = blockTimestamp
                self.chainId = chainId
                self.collateralAmounts = collateralAmounts
                self.collateralAssetSymbols = collateralAssetSymbols
                self.comet = comet
                self.repayer = repayer
                self.preferAcross = preferAcross
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple9(.uint256(amount),
                        .string(assetSymbol),
                        .uint256(blockTimestamp),
                        .uint256(chainId),
                        .array(.uint256, collateralAmounts.map {
                            .uint256($0)
                        }),
                        .array(.string, collateralAssetSymbols.map {
                            .string($0)
                        }),
                        .address(comet),
                        .address(repayer),
                        .bool(preferAcross))
            }

            public static func decode(hex: Hex) throws -> CometActionsBuilder.CometRepayIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> CometActionsBuilder.CometRepayIntent {
                switch value {
                case let .tuple9(.uint256(amount),
                                 .string(assetSymbol),
                                 .uint256(blockTimestamp),
                                 .uint256(chainId),
                                 .array(.uint256, collateralAmounts),
                                 .array(.string, collateralAssetSymbols),
                                 .address(comet),
                                 .address(repayer),
                                 .bool(preferAcross)):
                    return CometActionsBuilder.CometRepayIntent(amount: amount, assetSymbol: assetSymbol, blockTimestamp: blockTimestamp, chainId: chainId, collateralAmounts: collateralAmounts.map {
                        $0.asBigUInt!
                    }, collateralAssetSymbols: collateralAssetSymbols.map {
                        $0.asString!
                    }, comet: comet, repayer: repayer, preferAcross: preferAcross)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct CometSupplyIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .string, .uint256, .uint256, .address, .address, .bool, .string])

            public let amount: BigUInt
            public let assetSymbol: String
            public let blockTimestamp: BigUInt
            public let chainId: BigUInt
            public let comet: EthAddress
            public let sender: EthAddress
            public let preferAcross: Bool
            public let paymentAssetSymbol: String

            public init(amount: BigUInt, assetSymbol: String, blockTimestamp: BigUInt, chainId: BigUInt, comet: EthAddress, sender: EthAddress, preferAcross: Bool, paymentAssetSymbol: String) {
                self.amount = amount
                self.assetSymbol = assetSymbol
                self.blockTimestamp = blockTimestamp
                self.chainId = chainId
                self.comet = comet
                self.sender = sender
                self.preferAcross = preferAcross
                self.paymentAssetSymbol = paymentAssetSymbol
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple8(.uint256(amount),
                        .string(assetSymbol),
                        .uint256(blockTimestamp),
                        .uint256(chainId),
                        .address(comet),
                        .address(sender),
                        .bool(preferAcross),
                        .string(paymentAssetSymbol))
            }

            public static func decode(hex: Hex) throws -> CometActionsBuilder.CometSupplyIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> CometActionsBuilder.CometSupplyIntent {
                switch value {
                case let .tuple8(.uint256(amount),
                                 .string(assetSymbol),
                                 .uint256(blockTimestamp),
                                 .uint256(chainId),
                                 .address(comet),
                                 .address(sender),
                                 .bool(preferAcross),
                                 .string(paymentAssetSymbol)):
                    return CometActionsBuilder.CometSupplyIntent(amount: amount, assetSymbol: assetSymbol, blockTimestamp: blockTimestamp, chainId: chainId, comet: comet, sender: sender, preferAcross: preferAcross, paymentAssetSymbol: paymentAssetSymbol)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct CometWithdrawIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .string, .uint256, .uint256, .address, .address, .bool])

            public let amount: BigUInt
            public let assetSymbol: String
            public let blockTimestamp: BigUInt
            public let chainId: BigUInt
            public let comet: EthAddress
            public let withdrawer: EthAddress
            public let preferAcross: Bool

            public init(amount: BigUInt, assetSymbol: String, blockTimestamp: BigUInt, chainId: BigUInt, comet: EthAddress, withdrawer: EthAddress, preferAcross: Bool) {
                self.amount = amount
                self.assetSymbol = assetSymbol
                self.blockTimestamp = blockTimestamp
                self.chainId = chainId
                self.comet = comet
                self.withdrawer = withdrawer
                self.preferAcross = preferAcross
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple7(.uint256(amount),
                        .string(assetSymbol),
                        .uint256(blockTimestamp),
                        .uint256(chainId),
                        .address(comet),
                        .address(withdrawer),
                        .bool(preferAcross))
            }

            public static func decode(hex: Hex) throws -> CometActionsBuilder.CometWithdrawIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> CometActionsBuilder.CometWithdrawIntent {
                switch value {
                case let .tuple7(.uint256(amount),
                                 .string(assetSymbol),
                                 .uint256(blockTimestamp),
                                 .uint256(chainId),
                                 .address(comet),
                                 .address(withdrawer),
                                 .bool(preferAcross)):
                    return CometActionsBuilder.CometWithdrawIntent(amount: amount, assetSymbol: assetSymbol, blockTimestamp: blockTimestamp, chainId: chainId, comet: comet, withdrawer: withdrawer, preferAcross: preferAcross)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum EIP712Helper {
        public struct EIP712Data: Equatable {
            public static let schema: ABI.Schema = .tuple([.bytes32, .bytes32, .bytes32])

            public let digest: Hex
            public let domainSeparator: Hex
            public let hashStruct: Hex

            public init(digest: Hex, domainSeparator: Hex, hashStruct: Hex) {
                self.digest = digest
                self.domainSeparator = domainSeparator
                self.hashStruct = hashStruct
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple3(.bytes32(digest),
                        .bytes32(domainSeparator),
                        .bytes32(hashStruct))
            }

            public static func decode(hex: Hex) throws -> EIP712Helper.EIP712Data {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> EIP712Helper.EIP712Data {
                switch value {
                case let .tuple3(.bytes32(digest),
                                 .bytes32(domainSeparator),
                                 .bytes32(hashStruct)):
                    return EIP712Helper.EIP712Data(digest: digest, domainSeparator: domainSeparator, hashStruct: hashStruct)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum IQuarkWallet {
        public struct QuarkOperation: Equatable {
            public static let schema: ABI.Schema = .tuple([.bytes32, .bool, .address, .array(.bytes), .bytes, .uint256])

            public let nonce: Hex
            public let isReplayable: Bool
            public let scriptAddress: EthAddress
            public let scriptSources: [Hex]
            public let scriptCalldata: Hex
            public let expiry: BigUInt

            public init(nonce: Hex, isReplayable: Bool, scriptAddress: EthAddress, scriptSources: [Hex], scriptCalldata: Hex, expiry: BigUInt) {
                self.nonce = nonce
                self.isReplayable = isReplayable
                self.scriptAddress = scriptAddress
                self.scriptSources = scriptSources
                self.scriptCalldata = scriptCalldata
                self.expiry = expiry
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple6(.bytes32(nonce),
                        .bool(isReplayable),
                        .address(scriptAddress),
                        .array(.bytes, scriptSources.map {
                            .bytes($0)
                        }),
                        .bytes(scriptCalldata),
                        .uint256(expiry))
            }

            public static func decode(hex: Hex) throws -> IQuarkWallet.QuarkOperation {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> IQuarkWallet.QuarkOperation {
                switch value {
                case let .tuple6(.bytes32(nonce),
                                 .bool(isReplayable),
                                 .address(scriptAddress),
                                 .array(.bytes, scriptSources),
                                 .bytes(scriptCalldata),
                                 .uint256(expiry)):
                    return IQuarkWallet.QuarkOperation(nonce: nonce, isReplayable: isReplayable, scriptAddress: scriptAddress, scriptSources: scriptSources.map {
                        $0.asHex!
                    }, scriptCalldata: scriptCalldata, expiry: expiry)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum MorphoActionsBuilder {
        public struct MorphoBorrowIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .string, .uint256, .address, .uint256, .uint256, .string, .bool])

            public let amount: BigUInt
            public let assetSymbol: String
            public let blockTimestamp: BigUInt
            public let borrower: EthAddress
            public let chainId: BigUInt
            public let collateralAmount: BigUInt
            public let collateralAssetSymbol: String
            public let preferAcross: Bool

            public init(amount: BigUInt, assetSymbol: String, blockTimestamp: BigUInt, borrower: EthAddress, chainId: BigUInt, collateralAmount: BigUInt, collateralAssetSymbol: String, preferAcross: Bool) {
                self.amount = amount
                self.assetSymbol = assetSymbol
                self.blockTimestamp = blockTimestamp
                self.borrower = borrower
                self.chainId = chainId
                self.collateralAmount = collateralAmount
                self.collateralAssetSymbol = collateralAssetSymbol
                self.preferAcross = preferAcross
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple8(.uint256(amount),
                        .string(assetSymbol),
                        .uint256(blockTimestamp),
                        .address(borrower),
                        .uint256(chainId),
                        .uint256(collateralAmount),
                        .string(collateralAssetSymbol),
                        .bool(preferAcross))
            }

            public static func decode(hex: Hex) throws -> MorphoActionsBuilder.MorphoBorrowIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> MorphoActionsBuilder.MorphoBorrowIntent {
                switch value {
                case let .tuple8(.uint256(amount),
                                 .string(assetSymbol),
                                 .uint256(blockTimestamp),
                                 .address(borrower),
                                 .uint256(chainId),
                                 .uint256(collateralAmount),
                                 .string(collateralAssetSymbol),
                                 .bool(preferAcross)):
                    return MorphoActionsBuilder.MorphoBorrowIntent(amount: amount, assetSymbol: assetSymbol, blockTimestamp: blockTimestamp, borrower: borrower, chainId: chainId, collateralAmount: collateralAmount, collateralAssetSymbol: collateralAssetSymbol, preferAcross: preferAcross)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct MorphoRepayIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .string, .uint256, .address, .uint256, .uint256, .string, .bool])

            public let amount: BigUInt
            public let assetSymbol: String
            public let blockTimestamp: BigUInt
            public let repayer: EthAddress
            public let chainId: BigUInt
            public let collateralAmount: BigUInt
            public let collateralAssetSymbol: String
            public let preferAcross: Bool

            public init(amount: BigUInt, assetSymbol: String, blockTimestamp: BigUInt, repayer: EthAddress, chainId: BigUInt, collateralAmount: BigUInt, collateralAssetSymbol: String, preferAcross: Bool) {
                self.amount = amount
                self.assetSymbol = assetSymbol
                self.blockTimestamp = blockTimestamp
                self.repayer = repayer
                self.chainId = chainId
                self.collateralAmount = collateralAmount
                self.collateralAssetSymbol = collateralAssetSymbol
                self.preferAcross = preferAcross
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple8(.uint256(amount),
                        .string(assetSymbol),
                        .uint256(blockTimestamp),
                        .address(repayer),
                        .uint256(chainId),
                        .uint256(collateralAmount),
                        .string(collateralAssetSymbol),
                        .bool(preferAcross))
            }

            public static func decode(hex: Hex) throws -> MorphoActionsBuilder.MorphoRepayIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> MorphoActionsBuilder.MorphoRepayIntent {
                switch value {
                case let .tuple8(.uint256(amount),
                                 .string(assetSymbol),
                                 .uint256(blockTimestamp),
                                 .address(repayer),
                                 .uint256(chainId),
                                 .uint256(collateralAmount),
                                 .string(collateralAssetSymbol),
                                 .bool(preferAcross)):
                    return MorphoActionsBuilder.MorphoRepayIntent(amount: amount, assetSymbol: assetSymbol, blockTimestamp: blockTimestamp, repayer: repayer, chainId: chainId, collateralAmount: collateralAmount, collateralAssetSymbol: collateralAssetSymbol, preferAcross: preferAcross)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct MorphoRewardsClaimIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .address, .uint256, .array(.address), .array(.uint256), .array(.address), .array(.address), .array(.bytes32), .bool])

            public let blockTimestamp: BigUInt
            public let claimer: EthAddress
            public let chainId: BigUInt
            public let accounts: [EthAddress]
            public let claimables: [BigUInt]
            public let distributors: [EthAddress]
            public let rewards: [EthAddress]
            public let proofs: [Hex]
            public let preferAcross: Bool

            public init(blockTimestamp: BigUInt, claimer: EthAddress, chainId: BigUInt, accounts: [EthAddress], claimables: [BigUInt], distributors: [EthAddress], rewards: [EthAddress], proofs: [Hex], preferAcross: Bool) {
                self.blockTimestamp = blockTimestamp
                self.claimer = claimer
                self.chainId = chainId
                self.accounts = accounts
                self.claimables = claimables
                self.distributors = distributors
                self.rewards = rewards
                self.proofs = proofs
                self.preferAcross = preferAcross
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple9(.uint256(blockTimestamp),
                        .address(claimer),
                        .uint256(chainId),
                        .array(.address, accounts.map {
                            .address($0)
                        }),
                        .array(.uint256, claimables.map {
                            .uint256($0)
                        }),
                        .array(.address, distributors.map {
                            .address($0)
                        }),
                        .array(.address, rewards.map {
                            .address($0)
                        }),
                        .array(.bytes32, proofs.map {
                            .bytes32($0)
                        }),
                        .bool(preferAcross))
            }

            public static func decode(hex: Hex) throws -> MorphoActionsBuilder.MorphoRewardsClaimIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> MorphoActionsBuilder.MorphoRewardsClaimIntent {
                switch value {
                case let .tuple9(.uint256(blockTimestamp),
                                 .address(claimer),
                                 .uint256(chainId),
                                 .array(.address, accounts),
                                 .array(.uint256, claimables),
                                 .array(.address, distributors),
                                 .array(.address, rewards),
                                 .array(.bytes32, proofs),
                                 .bool(preferAcross)):
                    return MorphoActionsBuilder.MorphoRewardsClaimIntent(blockTimestamp: blockTimestamp, claimer: claimer, chainId: chainId, accounts: accounts.map {
                        $0.asEthAddress!
                    }, claimables: claimables.map {
                        $0.asBigUInt!
                    }, distributors: distributors.map {
                        $0.asEthAddress!
                    }, rewards: rewards.map {
                        $0.asEthAddress!
                    }, proofs: proofs.map {
                        $0.asHex!
                    }, preferAcross: preferAcross)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum MorphoVaultActionsBuilder {
        public struct MorphoVaultSupplyIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .string, .uint256, .address, .uint256, .bool])

            public let amount: BigUInt
            public let assetSymbol: String
            public let blockTimestamp: BigUInt
            public let sender: EthAddress
            public let chainId: BigUInt
            public let preferAcross: Bool

            public init(amount: BigUInt, assetSymbol: String, blockTimestamp: BigUInt, sender: EthAddress, chainId: BigUInt, preferAcross: Bool) {
                self.amount = amount
                self.assetSymbol = assetSymbol
                self.blockTimestamp = blockTimestamp
                self.sender = sender
                self.chainId = chainId
                self.preferAcross = preferAcross
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple6(.uint256(amount),
                        .string(assetSymbol),
                        .uint256(blockTimestamp),
                        .address(sender),
                        .uint256(chainId),
                        .bool(preferAcross))
            }

            public static func decode(hex: Hex) throws -> MorphoVaultActionsBuilder.MorphoVaultSupplyIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> MorphoVaultActionsBuilder.MorphoVaultSupplyIntent {
                switch value {
                case let .tuple6(.uint256(amount),
                                 .string(assetSymbol),
                                 .uint256(blockTimestamp),
                                 .address(sender),
                                 .uint256(chainId),
                                 .bool(preferAcross)):
                    return MorphoVaultActionsBuilder.MorphoVaultSupplyIntent(amount: amount, assetSymbol: assetSymbol, blockTimestamp: blockTimestamp, sender: sender, chainId: chainId, preferAcross: preferAcross)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct MorphoVaultWithdrawIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .string, .uint256, .uint256, .address, .bool])

            public let amount: BigUInt
            public let assetSymbol: String
            public let blockTimestamp: BigUInt
            public let chainId: BigUInt
            public let withdrawer: EthAddress
            public let preferAcross: Bool

            public init(amount: BigUInt, assetSymbol: String, blockTimestamp: BigUInt, chainId: BigUInt, withdrawer: EthAddress, preferAcross: Bool) {
                self.amount = amount
                self.assetSymbol = assetSymbol
                self.blockTimestamp = blockTimestamp
                self.chainId = chainId
                self.withdrawer = withdrawer
                self.preferAcross = preferAcross
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple6(.uint256(amount),
                        .string(assetSymbol),
                        .uint256(blockTimestamp),
                        .uint256(chainId),
                        .address(withdrawer),
                        .bool(preferAcross))
            }

            public static func decode(hex: Hex) throws -> MorphoVaultActionsBuilder.MorphoVaultWithdrawIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> MorphoVaultActionsBuilder.MorphoVaultWithdrawIntent {
                switch value {
                case let .tuple6(.uint256(amount),
                                 .string(assetSymbol),
                                 .uint256(blockTimestamp),
                                 .uint256(chainId),
                                 .address(withdrawer),
                                 .bool(preferAcross)):
                    return MorphoVaultActionsBuilder.MorphoVaultWithdrawIntent(amount: amount, assetSymbol: assetSymbol, blockTimestamp: blockTimestamp, chainId: chainId, withdrawer: withdrawer, preferAcross: preferAcross)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum PaymentInfo {
        public struct Payment: Equatable {
            public static let schema: ABI.Schema = .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])

            public let isToken: Bool
            public let currency: String
            public let quoteId: Hex
            public let maxCosts: [PaymentInfo.PaymentMaxCost]

            public init(isToken: Bool, currency: String, quoteId: Hex, maxCosts: [PaymentInfo.PaymentMaxCost]) {
                self.isToken = isToken
                self.currency = currency
                self.quoteId = quoteId
                self.maxCosts = maxCosts
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple4(.bool(isToken),
                        .string(currency),
                        .bytes32(quoteId),
                        .array(PaymentInfo.PaymentMaxCost.schema, maxCosts.map {
                            $0.asValue
                        }))
            }

            public static func decode(hex: Hex) throws -> PaymentInfo.Payment {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> PaymentInfo.Payment {
                switch value {
                case let .tuple4(.bool(isToken),
                                 .string(currency),
                                 .bytes32(quoteId),
                                 .array(PaymentInfo.PaymentMaxCost.schema, maxCosts)):
                    return try PaymentInfo.Payment(isToken: isToken, currency: currency, quoteId: quoteId, maxCosts: maxCosts.map {
                        try PaymentInfo.PaymentMaxCost.decodeValue($0)
                    })
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct PaymentMaxCost: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .uint256])

            public let chainId: BigUInt
            public let amount: BigUInt

            public init(chainId: BigUInt, amount: BigUInt) {
                self.chainId = chainId
                self.amount = amount
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple2(.uint256(chainId),
                        .uint256(amount))
            }

            public static func decode(hex: Hex) throws -> PaymentInfo.PaymentMaxCost {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> PaymentInfo.PaymentMaxCost {
                switch value {
                case let .tuple2(.uint256(chainId),
                                 .uint256(amount)):
                    return PaymentInfo.PaymentMaxCost(chainId: chainId, amount: amount)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum QuarkBuilderBase {
        public struct BuilderResult: Equatable {
            public static let schema: ABI.Schema = .tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])

            public let version: String
            public let quarkOperations: [IQuarkWallet.QuarkOperation]
            public let actions: [Actions.Action]
            public let eip712Data: EIP712Helper.EIP712Data
            public let paymentCurrency: String

            public init(version: String, quarkOperations: [IQuarkWallet.QuarkOperation], actions: [Actions.Action], eip712Data: EIP712Helper.EIP712Data, paymentCurrency: String) {
                self.version = version
                self.quarkOperations = quarkOperations
                self.actions = actions
                self.eip712Data = eip712Data
                self.paymentCurrency = paymentCurrency
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple5(.string(version),
                        .array(IQuarkWallet.QuarkOperation.schema, quarkOperations.map {
                            $0.asValue
                        }),
                        .array(Actions.Action.schema, actions.map {
                            $0.asValue
                        }),
                        eip712Data.asValue,
                        .string(paymentCurrency))
            }

            public static func decode(hex: Hex) throws -> QuarkBuilderBase.BuilderResult {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> QuarkBuilderBase.BuilderResult {
                switch value {
                case let .tuple5(.string(version),
                                 .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                 .array(Actions.Action.schema, actions),
                                 eip712Data,
                                 .string(paymentCurrency)):
                    return try QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                        try IQuarkWallet.QuarkOperation.decodeValue($0)
                    }, actions: actions.map {
                        try Actions.Action.decodeValue($0)
                    }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum Quotes {
        public struct AssetQuote: Equatable {
            public static let schema: ABI.Schema = .tuple([.string, .uint256])

            public let symbol: String
            public let price: BigUInt

            public init(symbol: String, price: BigUInt) {
                self.symbol = symbol
                self.price = price
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple2(.string(symbol),
                        .uint256(price))
            }

            public static func decode(hex: Hex) throws -> Quotes.AssetQuote {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Quotes.AssetQuote {
                switch value {
                case let .tuple2(.string(symbol),
                                 .uint256(price)):
                    return Quotes.AssetQuote(symbol: symbol, price: price)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct NetworkOperationFee: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .string, .uint256])

            public let chainId: BigUInt
            public let opType: String
            public let price: BigUInt

            public init(chainId: BigUInt, opType: String, price: BigUInt) {
                self.chainId = chainId
                self.opType = opType
                self.price = price
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple3(.uint256(chainId),
                        .string(opType),
                        .uint256(price))
            }

            public static func decode(hex: Hex) throws -> Quotes.NetworkOperationFee {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Quotes.NetworkOperationFee {
                switch value {
                case let .tuple3(.uint256(chainId),
                                 .string(opType),
                                 .uint256(price)):
                    return Quotes.NetworkOperationFee(chainId: chainId, opType: opType, price: price)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct Quote: Equatable {
            public static let schema: ABI.Schema = .tuple([.bytes32, .uint256, .uint256, .array(Quotes.AssetQuote.schema), .array(Quotes.NetworkOperationFee.schema)])

            public let quoteId: Hex
            public let issuedAt: BigUInt
            public let expiresAt: BigUInt
            public let assetQuotes: [Quotes.AssetQuote]
            public let networkOperationFees: [Quotes.NetworkOperationFee]

            public init(quoteId: Hex, issuedAt: BigUInt, expiresAt: BigUInt, assetQuotes: [Quotes.AssetQuote], networkOperationFees: [Quotes.NetworkOperationFee]) {
                self.quoteId = quoteId
                self.issuedAt = issuedAt
                self.expiresAt = expiresAt
                self.assetQuotes = assetQuotes
                self.networkOperationFees = networkOperationFees
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple5(.bytes32(quoteId),
                        .uint256(issuedAt),
                        .uint256(expiresAt),
                        .array(Quotes.AssetQuote.schema, assetQuotes.map {
                            $0.asValue
                        }),
                        .array(Quotes.NetworkOperationFee.schema, networkOperationFees.map {
                            $0.asValue
                        }))
            }

            public static func decode(hex: Hex) throws -> Quotes.Quote {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> Quotes.Quote {
                switch value {
                case let .tuple5(.bytes32(quoteId),
                                 .uint256(issuedAt),
                                 .uint256(expiresAt),
                                 .array(Quotes.AssetQuote.schema, assetQuotes),
                                 .array(Quotes.NetworkOperationFee.schema, networkOperationFees)):
                    return try Quotes.Quote(quoteId: quoteId, issuedAt: issuedAt, expiresAt: expiresAt, assetQuotes: assetQuotes.map {
                        try Quotes.AssetQuote.decodeValue($0)
                    }, networkOperationFees: networkOperationFees.map {
                        try Quotes.NetworkOperationFee.decodeValue($0)
                    })
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum SwapActionsBuilder {
        public struct RecurringSwapIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .address, .uint256, .address, .uint256, .bool, .bytes, .uint256, .address, .uint256, .bool])

            public let chainId: BigUInt
            public let sellToken: EthAddress
            public let sellAmount: BigUInt
            public let buyToken: EthAddress
            public let buyAmount: BigUInt
            public let isExactOut: Bool
            public let path: Hex
            public let interval: BigUInt
            public let sender: EthAddress
            public let blockTimestamp: BigUInt
            public let preferAcross: Bool

            public init(chainId: BigUInt, sellToken: EthAddress, sellAmount: BigUInt, buyToken: EthAddress, buyAmount: BigUInt, isExactOut: Bool, path: Hex, interval: BigUInt, sender: EthAddress, blockTimestamp: BigUInt, preferAcross: Bool) {
                self.chainId = chainId
                self.sellToken = sellToken
                self.sellAmount = sellAmount
                self.buyToken = buyToken
                self.buyAmount = buyAmount
                self.isExactOut = isExactOut
                self.path = path
                self.interval = interval
                self.sender = sender
                self.blockTimestamp = blockTimestamp
                self.preferAcross = preferAcross
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple11(.uint256(chainId),
                         .address(sellToken),
                         .uint256(sellAmount),
                         .address(buyToken),
                         .uint256(buyAmount),
                         .bool(isExactOut),
                         .bytes(path),
                         .uint256(interval),
                         .address(sender),
                         .uint256(blockTimestamp),
                         .bool(preferAcross))
            }

            public static func decode(hex: Hex) throws -> SwapActionsBuilder.RecurringSwapIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> SwapActionsBuilder.RecurringSwapIntent {
                switch value {
                case let .tuple11(.uint256(chainId),
                                  .address(sellToken),
                                  .uint256(sellAmount),
                                  .address(buyToken),
                                  .uint256(buyAmount),
                                  .bool(isExactOut),
                                  .bytes(path),
                                  .uint256(interval),
                                  .address(sender),
                                  .uint256(blockTimestamp),
                                  .bool(preferAcross)):
                    return SwapActionsBuilder.RecurringSwapIntent(chainId: chainId, sellToken: sellToken, sellAmount: sellAmount, buyToken: buyToken, buyAmount: buyAmount, isExactOut: isExactOut, path: path, interval: interval, sender: sender, blockTimestamp: blockTimestamp, preferAcross: preferAcross)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }

        public struct ZeroExSwapIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .address, .bytes, .address, .uint256, .address, .uint256, .address, .uint256, .address, .bool, .uint256, .bool])

            public let chainId: BigUInt
            public let entryPoint: EthAddress
            public let swapData: Hex
            public let sellToken: EthAddress
            public let sellAmount: BigUInt
            public let buyToken: EthAddress
            public let buyAmount: BigUInt
            public let feeToken: EthAddress
            public let feeAmount: BigUInt
            public let sender: EthAddress
            public let isExactOut: Bool
            public let blockTimestamp: BigUInt
            public let preferAcross: Bool

            public init(chainId: BigUInt, entryPoint: EthAddress, swapData: Hex, sellToken: EthAddress, sellAmount: BigUInt, buyToken: EthAddress, buyAmount: BigUInt, feeToken: EthAddress, feeAmount: BigUInt, sender: EthAddress, isExactOut: Bool, blockTimestamp: BigUInt, preferAcross: Bool) {
                self.chainId = chainId
                self.entryPoint = entryPoint
                self.swapData = swapData
                self.sellToken = sellToken
                self.sellAmount = sellAmount
                self.buyToken = buyToken
                self.buyAmount = buyAmount
                self.feeToken = feeToken
                self.feeAmount = feeAmount
                self.sender = sender
                self.isExactOut = isExactOut
                self.blockTimestamp = blockTimestamp
                self.preferAcross = preferAcross
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple13(.uint256(chainId),
                         .address(entryPoint),
                         .bytes(swapData),
                         .address(sellToken),
                         .uint256(sellAmount),
                         .address(buyToken),
                         .uint256(buyAmount),
                         .address(feeToken),
                         .uint256(feeAmount),
                         .address(sender),
                         .bool(isExactOut),
                         .uint256(blockTimestamp),
                         .bool(preferAcross))
            }

            public static func decode(hex: Hex) throws -> SwapActionsBuilder.ZeroExSwapIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> SwapActionsBuilder.ZeroExSwapIntent {
                switch value {
                case let .tuple13(.uint256(chainId),
                                  .address(entryPoint),
                                  .bytes(swapData),
                                  .address(sellToken),
                                  .uint256(sellAmount),
                                  .address(buyToken),
                                  .uint256(buyAmount),
                                  .address(feeToken),
                                  .uint256(feeAmount),
                                  .address(sender),
                                  .bool(isExactOut),
                                  .uint256(blockTimestamp),
                                  .bool(preferAcross)):
                    return try SwapActionsBuilder.ZeroExSwapIntent(chainId: chainId, entryPoint: entryPoint, swapData: swapData, sellToken: sellToken, sellAmount: sellAmount, buyToken: buyToken, buyAmount: buyAmount, feeToken: feeToken, feeAmount: feeAmount, sender: sender, isExactOut: isExactOut, blockTimestamp: blockTimestamp, preferAcross: preferAcross)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public enum TransferActionsBuilder {
        public struct TransferIntent: Equatable {
            public static let schema: ABI.Schema = .tuple([.uint256, .string, .uint256, .address, .address, .uint256, .bool, .string])

            public let chainId: BigUInt
            public let assetSymbol: String
            public let amount: BigUInt
            public let sender: EthAddress
            public let recipient: EthAddress
            public let blockTimestamp: BigUInt
            public let preferAcross: Bool
            public let paymentAssetSymbol: String

            public init(chainId: BigUInt, assetSymbol: String, amount: BigUInt, sender: EthAddress, recipient: EthAddress, blockTimestamp: BigUInt, preferAcross: Bool, paymentAssetSymbol: String) {
                self.chainId = chainId
                self.assetSymbol = assetSymbol
                self.amount = amount
                self.sender = sender
                self.recipient = recipient
                self.blockTimestamp = blockTimestamp
                self.preferAcross = preferAcross
                self.paymentAssetSymbol = paymentAssetSymbol
            }

            public var encoded: Hex {
                asValue.encoded
            }

            public var asValue: ABI.Value {
                .tuple8(.uint256(chainId),
                        .string(assetSymbol),
                        .uint256(amount),
                        .address(sender),
                        .address(recipient),
                        .uint256(blockTimestamp),
                        .bool(preferAcross),
                        .string(paymentAssetSymbol))
            }

            public static func decode(hex: Hex) throws -> TransferActionsBuilder.TransferIntent {
                if let value = try? schema.decode(hex) {
                    return try decodeValue(value)
                }
                // both versions are valid encodings of tuples with dynamic fields ( bytes or string ), so try both decodings
                if case let .tuple1(wrappedValue) = try? ABI.Schema.tuple([schema]).decode(hex) {
                    return try decodeValue(wrappedValue)
                }
                // retry original to throw the error
                return try decodeValue(schema.decode(hex))
            }

            public static func decodeValue(_ value: ABI.Value) throws -> TransferActionsBuilder.TransferIntent {
                switch value {
                case let .tuple8(.uint256(chainId),
                                 .string(assetSymbol),
                                 .uint256(amount),
                                 .address(sender),
                                 .address(recipient),
                                 .uint256(blockTimestamp),
                                 .bool(preferAcross),
                                 .string(paymentAssetSymbol)):
                    return TransferActionsBuilder.TransferIntent(chainId: chainId, assetSymbol: assetSymbol, amount: amount, sender: sender, recipient: recipient, blockTimestamp: blockTimestamp, preferAcross: preferAcross, paymentAssetSymbol: paymentAssetSymbol)
                default:
                    throw ABI.DecodeError.mismatchedType(value.schema, schema)
                }
            }
        }
    }

    public static let creationCode: Hex = ""
    public static let runtimeCode: Hex = ""

    public static let AssetPositionNotFoundError = ABI.Function(
        name: "AssetPositionNotFound",
        inputs: []
    )

    public static let BadDataError = ABI.Function(
        name: "BadData",
        inputs: []
    )

    public static let BalanceNotRightError = ABI.Function(
        name: "BalanceNotRight",
        inputs: [.uint256, .uint256, .uint256]
    )

    public static let BridgeAmountTooLowError = ABI.Function(
        name: "BridgeAmountTooLow",
        inputs: []
    )

    public static let BridgingUnsupportedForAssetError = ABI.Function(
        name: "BridgingUnsupportedForAsset",
        inputs: []
    )

    public static let FundsUnavailableError = ABI.Function(
        name: "FundsUnavailable",
        inputs: [.string, .uint256, .uint256]
    )

    public static let ImpossibleToConstructQuotePayError = ABI.Function(
        name: "ImpossibleToConstructQuotePay",
        inputs: [.string]
    )

    public static let IndexOutOfBoundError = ABI.Function(
        name: "IndexOutOfBound",
        inputs: []
    )

    public static let InvalidActionTypeError = ABI.Function(
        name: "InvalidActionType",
        inputs: []
    )

    public static let InvalidAssetForBridgeError = ABI.Function(
        name: "InvalidAssetForBridge",
        inputs: []
    )

    public static let InvalidInputError = ABI.Function(
        name: "InvalidInput",
        inputs: []
    )

    public static let InvalidRepayActionContextError = ABI.Function(
        name: "InvalidRepayActionContext",
        inputs: []
    )

    public static let KeyNotFoundError = ABI.Function(
        name: "KeyNotFound",
        inputs: []
    )

    public static let MaxCostMissingForChainError = ABI.Function(
        name: "MaxCostMissingForChain",
        inputs: [.uint256]
    )

    public static let MaxCostTooHighError = ABI.Function(
        name: "MaxCostTooHigh",
        inputs: []
    )

    public static let MissingWrapperCounterpartError = ABI.Function(
        name: "MissingWrapperCounterpart",
        inputs: []
    )

    public static let MorphoMarketNotFoundError = ABI.Function(
        name: "MorphoMarketNotFound",
        inputs: []
    )

    public static let MorphoVaultNotFoundError = ABI.Function(
        name: "MorphoVaultNotFound",
        inputs: []
    )

    public static let NoKnownAssetQuoteError = ABI.Function(
        name: "NoKnownAssetQuote",
        inputs: [.string]
    )

    public static let NoKnownBridgeError = ABI.Function(
        name: "NoKnownBridge",
        inputs: [.string, .uint256]
    )

    public static let NoKnownDomainIdError = ABI.Function(
        name: "NoKnownDomainId",
        inputs: [.string, .uint256]
    )

    public static let NoKnownPaymentTokenError = ABI.Function(
        name: "NoKnownPaymentToken",
        inputs: [.uint256]
    )

    public static let NoKnownRouterError = ABI.Function(
        name: "NoKnownRouter",
        inputs: [.string, .uint256]
    )

    public static let NoPriceFeedPathFoundError = ABI.Function(
        name: "NoPriceFeedPathFound",
        inputs: [.string, .string]
    )

    public static let NotEnoughFundsToBridgeError = ABI.Function(
        name: "NotEnoughFundsToBridge",
        inputs: [.string, .uint256, .uint256]
    )

    public static let NotUnwrappableError = ABI.Function(
        name: "NotUnwrappable",
        inputs: []
    )

    public static let NotWrappableError = ABI.Function(
        name: "NotWrappable",
        inputs: []
    )

    public static let QuarkSecretNotFoundError = ABI.Function(
        name: "QuarkSecretNotFound",
        inputs: [.address]
    )

    public static let UnableToConstructPaycallError = ABI.Function(
        name: "UnableToConstructPaycall",
        inputs: [.string, .uint256]
    )

    public static let UnableToConstructQuotePayError = ABI.Function(
        name: "UnableToConstructQuotePay",
        inputs: [.string, .uint256]
    )

    public static let UnsupportedChainIdError = ABI.Function(
        name: "UnsupportedChainId",
        inputs: []
    )

    public enum RevertReason: Equatable, Error {
        case assetPositionNotFound
        case badData
        case balanceNotRight(BigUInt, BigUInt, BigUInt)
        case bridgeAmountTooLow
        case bridgingUnsupportedForAsset
        case fundsUnavailable(String, BigUInt, BigUInt)
        case impossibleToConstructQuotePay(String)
        case indexOutOfBound
        case invalidActionType
        case invalidAssetForBridge
        case invalidInput
        case invalidRepayActionContext
        case keyNotFound
        case maxCostMissingForChain(BigUInt)
        case maxCostTooHigh
        case missingWrapperCounterpart
        case morphoMarketNotFound
        case morphoVaultNotFound
        case noKnownAssetQuote(String)
        case noKnownBridge(String, BigUInt)
        case noKnownDomainId(String, BigUInt)
        case noKnownPaymentToken(BigUInt)
        case noKnownRouter(String, BigUInt)
        case noPriceFeedPathFound(String, String)
        case notEnoughFundsToBridge(String, BigUInt, BigUInt)
        case notUnwrappable
        case notWrappable
        case quarkSecretNotFound(EthAddress)
        case unableToConstructPaycall(String, BigUInt)
        case unableToConstructQuotePay(String, BigUInt)
        case unsupportedChainId
        case unknownRevert(String, String)
    }

    public static func rewrapError(_ error: ABI.Function, value: ABI.Value) -> RevertReason {
        switch (error, value) {
        case (AssetPositionNotFoundError, _):
            return .assetPositionNotFound
        case (BadDataError, _):
            return .badData
        case (BalanceNotRightError, let .tuple3(.uint256(paymentAssetBalance), .uint256(assetsIn), .uint256(assetsOut))):
            return .balanceNotRight(paymentAssetBalance, assetsIn, assetsOut)
        case (BridgeAmountTooLowError, _):
            return .bridgeAmountTooLow
        case (BridgingUnsupportedForAssetError, _):
            return .bridgingUnsupportedForAsset
        case (FundsUnavailableError, let .tuple3(.string(assetSymbol), .uint256(requiredAmount), .uint256(actualAmount))):
            return .fundsUnavailable(assetSymbol, requiredAmount, actualAmount)
        case (ImpossibleToConstructQuotePayError, let .tuple1(.string(assetSymbol))):
            return .impossibleToConstructQuotePay(assetSymbol)
        case (IndexOutOfBoundError, _):
            return .indexOutOfBound
        case (InvalidActionTypeError, _):
            return .invalidActionType
        case (InvalidAssetForBridgeError, _):
            return .invalidAssetForBridge
        case (InvalidInputError, _):
            return .invalidInput
        case (InvalidRepayActionContextError, _):
            return .invalidRepayActionContext
        case (KeyNotFoundError, _):
            return .keyNotFound
        case (MaxCostMissingForChainError, let .tuple1(.uint256(chainId))):
            return .maxCostMissingForChain(chainId)
        case (MaxCostTooHighError, _):
            return .maxCostTooHigh
        case (MissingWrapperCounterpartError, _):
            return .missingWrapperCounterpart
        case (MorphoMarketNotFoundError, _):
            return .morphoMarketNotFound
        case (MorphoVaultNotFoundError, _):
            return .morphoVaultNotFound
        case (NoKnownAssetQuoteError, let .tuple1(.string(symbol))):
            return .noKnownAssetQuote(symbol)
        case (NoKnownBridgeError, let .tuple2(.string(bridgeType), .uint256(srcChainId))):
            return .noKnownBridge(bridgeType, srcChainId)
        case (NoKnownDomainIdError, let .tuple2(.string(bridgeType), .uint256(dstChainId))):
            return .noKnownDomainId(bridgeType, dstChainId)
        case (NoKnownPaymentTokenError, let .tuple1(.uint256(chainId))):
            return .noKnownPaymentToken(chainId)
        case (NoKnownRouterError, let .tuple2(.string(routerType), .uint256(chainId))):
            return .noKnownRouter(routerType, chainId)
        case (NoPriceFeedPathFoundError, let .tuple2(.string(inputAssetSymbol), .string(outputAssetSymbol))):
            return .noPriceFeedPathFound(inputAssetSymbol, outputAssetSymbol)
        case (NotEnoughFundsToBridgeError, let .tuple3(.string(assetSymbol), .uint256(requiredAmount), .uint256(amountLeftToBridge))):
            return .notEnoughFundsToBridge(assetSymbol, requiredAmount, amountLeftToBridge)
        case (NotUnwrappableError, _):
            return .notUnwrappable
        case (NotWrappableError, _):
            return .notWrappable
        case (QuarkSecretNotFoundError, let .tuple1(.address(account))):
            return .quarkSecretNotFound(account)
        case (UnableToConstructPaycallError, let .tuple2(.string(assetSymbol), .uint256(maxCost))):
            return .unableToConstructPaycall(assetSymbol, maxCost)
        case (UnableToConstructQuotePayError, let .tuple2(.string(assetSymbol), .uint256(totalQuoteAmount))):
            return .unableToConstructQuotePay(assetSymbol, totalQuoteAmount)
        case (UnsupportedChainIdError, _):
            return .unsupportedChainId
        case let (e, v):
            return .unknownRevert(e.name, String(describing: v))
        }
    }

    public static let errors: [ABI.Function] = [AssetPositionNotFoundError, BadDataError, BalanceNotRightError, BridgeAmountTooLowError, BridgingUnsupportedForAssetError, FundsUnavailableError, ImpossibleToConstructQuotePayError, IndexOutOfBoundError, InvalidActionTypeError, InvalidAssetForBridgeError, InvalidInputError, InvalidRepayActionContextError, KeyNotFoundError, MaxCostMissingForChainError, MaxCostTooHighError, MissingWrapperCounterpartError, MorphoMarketNotFoundError, MorphoVaultNotFoundError, NoKnownAssetQuoteError, NoKnownBridgeError, NoKnownDomainIdError, NoKnownPaymentTokenError, NoKnownRouterError, NoPriceFeedPathFoundError, NotEnoughFundsToBridgeError, NotUnwrappableError, NotWrappableError, QuarkSecretNotFoundError, UnableToConstructPaycallError, UnableToConstructQuotePayError, UnsupportedChainIdError]
    public static let functions: [ABI.Function] = [VERSIONFn, cometBorrowFn, cometRepayFn, cometSupplyFn, cometWithdrawFn, includeErrorsFn, morphoBorrowFn, morphoClaimRewardsFn, morphoRepayFn, morphoVaultSupplyFn, morphoVaultWithdrawFn, recurringSwapFn, swapFn, transferFn]
    public static let VERSIONFn = ABI.Function(
        name: "VERSION",
        inputs: [],
        outputs: [.string]
    )

    public static func VERSION(withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<String, RevertReason> {
        do {
            let query = try VERSIONFn.encoded(with: [])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try VERSIONFn.decode(output: result)

            switch decoded {
            case let .tuple1(.string(var0)):
                return .success(var0)
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, VERSIONFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let cometBorrowFn = ABI.Function(
        name: "cometBorrow",
        inputs: [.tuple([.uint256, .string, .uint256, .address, .uint256, .array(.uint256), .array(.string), .address, .bool]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func cometBorrow(borrowIntent: CometActionsBuilder.CometBorrowIntent, chainAccountsList: [Accounts.ChainAccounts], payment: PaymentInfo.Payment, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try cometBorrowFn.encoded(with: [borrowIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), payment.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try cometBorrowFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, cometBorrowFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let cometRepayFn = ABI.Function(
        name: "cometRepay",
        inputs: [.tuple([.uint256, .string, .uint256, .uint256, .array(.uint256), .array(.string), .address, .address, .bool]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func cometRepay(repayIntent: CometActionsBuilder.CometRepayIntent, chainAccountsList: [Accounts.ChainAccounts], payment: PaymentInfo.Payment, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try cometRepayFn.encoded(with: [repayIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), payment.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try cometRepayFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, cometRepayFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let cometSupplyFn = ABI.Function(
        name: "cometSupply",
        inputs: [.tuple([.uint256, .string, .uint256, .uint256, .address, .address, .bool, .string]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bytes32, .uint256, .uint256, .array(Quotes.AssetQuote.schema), .array(Quotes.NetworkOperationFee.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func cometSupply(cometSupplyIntent: CometActionsBuilder.CometSupplyIntent, chainAccountsList: [Accounts.ChainAccounts], quote: Quotes.Quote, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try cometSupplyFn.encoded(with: [cometSupplyIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), quote.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try cometSupplyFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, cometSupplyFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let cometWithdrawFn = ABI.Function(
        name: "cometWithdraw",
        inputs: [.tuple([.uint256, .string, .uint256, .uint256, .address, .address, .bool]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func cometWithdraw(cometWithdrawIntent: CometActionsBuilder.CometWithdrawIntent, chainAccountsList: [Accounts.ChainAccounts], payment: PaymentInfo.Payment, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try cometWithdrawFn.encoded(with: [cometWithdrawIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), payment.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try cometWithdrawFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, cometWithdrawFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let includeErrorsFn = ABI.Function(
        name: "includeErrors",
        inputs: [],
        outputs: [.uint256]
    )

    public static func includeErrors(withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<BigUInt, RevertReason> {
        do {
            let query = try includeErrorsFn.encoded(with: [])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try includeErrorsFn.decode(output: result)

            switch decoded {
            case let .tuple1(.uint256(var0)):
                return .success(var0)
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, includeErrorsFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let morphoBorrowFn = ABI.Function(
        name: "morphoBorrow",
        inputs: [.tuple([.uint256, .string, .uint256, .address, .uint256, .uint256, .string, .bool]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func morphoBorrow(borrowIntent: MorphoActionsBuilder.MorphoBorrowIntent, chainAccountsList: [Accounts.ChainAccounts], payment: PaymentInfo.Payment, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try morphoBorrowFn.encoded(with: [borrowIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), payment.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try morphoBorrowFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, morphoBorrowFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let morphoClaimRewardsFn = ABI.Function(
        name: "morphoClaimRewards",
        inputs: [.tuple([.uint256, .address, .uint256, .array(.address), .array(.uint256), .array(.address), .array(.address), .array(.bytes32), .bool]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func morphoClaimRewards(claimIntent: MorphoActionsBuilder.MorphoRewardsClaimIntent, chainAccountsList: [Accounts.ChainAccounts], payment: PaymentInfo.Payment, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try morphoClaimRewardsFn.encoded(with: [claimIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), payment.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try morphoClaimRewardsFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, morphoClaimRewardsFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let morphoRepayFn = ABI.Function(
        name: "morphoRepay",
        inputs: [.tuple([.uint256, .string, .uint256, .address, .uint256, .uint256, .string, .bool]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func morphoRepay(repayIntent: MorphoActionsBuilder.MorphoRepayIntent, chainAccountsList: [Accounts.ChainAccounts], payment: PaymentInfo.Payment, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try morphoRepayFn.encoded(with: [repayIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), payment.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try morphoRepayFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, morphoRepayFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let morphoVaultSupplyFn = ABI.Function(
        name: "morphoVaultSupply",
        inputs: [.tuple([.uint256, .string, .uint256, .address, .uint256, .bool]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func morphoVaultSupply(supplyIntent: MorphoVaultActionsBuilder.MorphoVaultSupplyIntent, chainAccountsList: [Accounts.ChainAccounts], payment: PaymentInfo.Payment, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try morphoVaultSupplyFn.encoded(with: [supplyIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), payment.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try morphoVaultSupplyFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, morphoVaultSupplyFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let morphoVaultWithdrawFn = ABI.Function(
        name: "morphoVaultWithdraw",
        inputs: [.tuple([.uint256, .string, .uint256, .uint256, .address, .bool]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func morphoVaultWithdraw(withdrawIntent: MorphoVaultActionsBuilder.MorphoVaultWithdrawIntent, chainAccountsList: [Accounts.ChainAccounts], payment: PaymentInfo.Payment, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try morphoVaultWithdrawFn.encoded(with: [withdrawIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), payment.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try morphoVaultWithdrawFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, morphoVaultWithdrawFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let recurringSwapFn = ABI.Function(
        name: "recurringSwap",
        inputs: [.tuple([.uint256, .address, .uint256, .address, .uint256, .bool, .bytes, .uint256, .address, .uint256, .bool]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func recurringSwap(swapIntent: SwapActionsBuilder.RecurringSwapIntent, chainAccountsList: [Accounts.ChainAccounts], payment: PaymentInfo.Payment, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try recurringSwapFn.encoded(with: [swapIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), payment.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try recurringSwapFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, recurringSwapFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let swapFn = ABI.Function(
        name: "swap",
        inputs: [.tuple([.uint256, .address, .bytes, .address, .uint256, .address, .uint256, .address, .uint256, .address, .bool, .uint256, .bool]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bool, .string, .bytes32, .array(PaymentInfo.PaymentMaxCost.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func swap(swapIntent: SwapActionsBuilder.ZeroExSwapIntent, chainAccountsList: [Accounts.ChainAccounts], payment: PaymentInfo.Payment, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try swapFn.encoded(with: [swapIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), payment.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try swapFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, swapFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }

    public static let transferFn = ABI.Function(
        name: "transfer",
        inputs: [.tuple([.uint256, .string, .uint256, .address, .address, .uint256, .bool, .string]), .array(.tuple([.uint256, .array(Accounts.QuarkSecret.schema), .array(Accounts.AssetPositions.schema), .array(Accounts.CometPositions.schema), .array(Accounts.MorphoPositions.schema), .array(Accounts.MorphoVaultPositions.schema)])), .tuple([.bytes32, .uint256, .uint256, .array(Quotes.AssetQuote.schema), .array(Quotes.NetworkOperationFee.schema)])],
        outputs: [.tuple([.string, .array(IQuarkWallet.QuarkOperation.schema), .array(Actions.Action.schema), EIP712Helper.EIP712Data.schema, .string])]
    )

    public static func transfer(transferIntent: TransferActionsBuilder.TransferIntent, chainAccountsList: [Accounts.ChainAccounts], quote: Quotes.Quote, withFunctions ffis: EVM.FFIMap = [:]) async throws -> Result<QuarkBuilderBase.BuilderResult, RevertReason> {
        do {
            let query = try transferFn.encoded(with: [transferIntent.asValue, .array(Accounts.ChainAccounts.schema, chainAccountsList.map {
                $0.asValue
            }), quote.asValue])
            let result = try await EVM.runQuery(bytecode: runtimeCode, query: query, withErrors: errors, withFunctions: ffis)
            let decoded = try transferFn.decode(output: result)

            switch decoded {
            case let .tuple1(.tuple5(.string(version),
                                     .array(IQuarkWallet.QuarkOperation.schema, quarkOperations),
                                     .array(Actions.Action.schema, actions),
                                     eip712Data,
                                     .string(paymentCurrency))):
                return try .success(QuarkBuilderBase.BuilderResult(version: version, quarkOperations: quarkOperations.map {
                    try IQuarkWallet.QuarkOperation.decodeValue($0)
                }, actions: actions.map {
                    try Actions.Action.decodeValue($0)
                }, eip712Data: EIP712Helper.EIP712Data.decodeValue(eip712Data), paymentCurrency: paymentCurrency))
            default:
                throw ABI.DecodeError.mismatchedType(decoded.schema, transferFn.outputTuple)
            }
        } catch let EVM.QueryError.error(e, v) {
            return .failure(rewrapError(e, value: v))
        }
    }
}
